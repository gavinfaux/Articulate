{"version":3,"file":"articulate.js","sources":["../../../Client/src/utils/document-node-utils.ts","../../../Client/src/utils/template-utils.ts","../../../Client/src/components/form-styles.ts","../../../Client/src/components/articulate-blogml-exporter.element.ts","../../../Client/src/components/articulate-blogml-importer.element.ts","../../../Client/node_modules/@lit/reactive-element/decorators/custom-element.js","../../../Client/node_modules/@lit/reactive-element/css-tag.js","../../../Client/node_modules/@lit/reactive-element/reactive-element.js","../../../Client/node_modules/@lit/reactive-element/decorators/property.js","../../../Client/node_modules/@lit/reactive-element/decorators/state.js","../../../Client/src/components/articulate-copy-theme.element.ts","../../../Client/src/components/articulate-dashboard-options.element.ts","../../../Client/src/dashboards/articulate-dashboard-root.element.ts","../../../Client/src/dashboards/manifests.ts","../../../Client/src/packages/markdown-editor/property-editors/markdown-editor/articulate-manifests.ts","../../../Client/src/packages/markdown-editor/property-editors/manifests.ts","../../../Client/src/packages/markdown-editor/manifests.ts","../../../Client/src/entrypoints/entrypoint.ts"],"sourcesContent":["import type { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\nimport type { UmbDocumentItemModel } from \"@umbraco-cms/backoffice/document\";\nimport type { UmbModalManagerContext } from \"@umbraco-cms/backoffice/modal\";\nimport { Articulate } from \"../api/articulate/sdk.gen\";\n\nimport type {\n  DocumentVariantResponseModel,\n  ProblemDetails,\n} from \"@umbraco-cms/backoffice/external/backend-api\";\nimport { DocumentService } from \"@umbraco-cms/backoffice/external/backend-api\";\n\n/**\n * Fetches the UDI of the Articulate blog archive document type.\n * @returns A promise that resolves to the UDI string of the blog archive document type.\n * @throws {Error} If the API request fails, an error is thrown with details from the response.\n */\nexport async function fetchArchiveDoctypeUdi(): Promise<string | null> {\n  try {\n    const result = await Articulate.getUmbracoManagementApiV1ArticulateBlogArchiveUdi();\n\n    if (!result.response.ok) {\n      let errorDetails: ProblemDetails | string;\n      try {\n        errorDetails = (await result.response.json()) as ProblemDetails;\n      } catch {\n        errorDetails = `API Error: ${result.response.status} ${result.response.statusText}`;\n      }\n\n      throw typeof errorDetails === \"string\"\n        ? new Error(errorDetails)\n        : new Error(errorDetails.title || errorDetails.detail || \"Unknown API error\");\n    }\n\n    if (!result.data) {\n      throw new Error(\"API returned no data for Articulate Archive UDI\");\n    }\n    return result.data;\n  } catch (error) {\n    throw new Error(\n      `Could not retrieve Articulate Archive document type: ${error instanceof Error ? error.message : String(error)}`,\n    );\n  }\n}\n\n/**\n * Fetches the node by its UDI.\n * @param udi - The UDI (Unique Data Identifier) of the node to fetch.\n * @returns A promise that resolves to the node or null if the node is not found.\n */\nexport async function fetchNodeByUdi(udi: string): Promise<DocumentVariantResponseModel | null> {\n  try {\n    const response = await DocumentService.getDocumentById({ id: udi });\n    return response?.variants?.[0] ?? null;\n  } catch (error) {\n    throw new Error(\n      `Failed to fetch node: ${error instanceof Error ? error.message : String(error)}`,\n    );\n  }\n}\n\n/**\n * Opens a document picker modal and returns the selected node's UDI.\n * @param modalManager - The Umbraco modal manager context.\n * @param doctypeUdi - The UDI of the document type to filter the picker by.\n * @param host - The controller host instance.\n * @returns A promise that resolves to the selected node's UDI, or null if no node was selected.\n */\nexport async function openNodePicker(\n  modalManager: UmbModalManagerContext,\n  doctypeUdi: string,\n  host: UmbControllerHost,\n): Promise<string | null> {\n  try {\n    const modalContext = modalManager.open(host, \"UMB_DOCUMENT_PICKER_MODAL\", {\n      data: {\n        multiple: false,\n        filter: (doc: UmbDocumentItemModel) => doc.documentType?.unique === doctypeUdi,\n      },\n    });\n    const result = (await modalContext.onSubmit()) as { selection: string[] } | undefined;\n    if (!result?.selection?.[0]) {\n      throw new Error(\"No node selected or selection cancelled\");\n    }\n    return result.selection[0];\n  } catch (error) {\n    throw new Error(\n      `Node picker failed: ${error instanceof Error ? error.message : String(error)}`,\n    );\n  }\n}\n","import { html, TemplateResult } from \"@umbraco-cms/backoffice/external/lit\";\n\nexport function renderHeaderActions(routerPath?: string): TemplateResult {\n  return html`\n    <div slot=\"header-actions\">\n      <uui-button\n        label=\"Back to Articulate dashboard options\"\n        look=\"outline\"\n        compact\n        href=${routerPath || \"/umbraco/section/settings/dashboard/articulate\"}\n      >\n        ‚Üê Back\n      </uui-button>\n    </div>\n  `;\n}\n","import { css } from \"@umbraco-cms/backoffice/external/lit\";\n\nexport const formStyles = css`\n  uui-box {\n    margin-top: var(--uui-size-space-6);\n    max-width: var(--uui-size-content);\n    margin-inline: auto;\n  }\n\n  uui-form-layout-item {\n    margin-bottom: var(--uui-size-space-4);\n  }\n\n  uui-label {\n    min-width: var(--uui-size-input-medium);\n    font-weight: var(--uui-weight-medium);\n  }\n\n  .form-actions {\n    margin-top: var(--uui-size-space-6);\n    text-align: right;\n  }\n`;\n","import {\n  css,\n  customElement,\n  html,\n  property,\n  state,\n  TemplateResult,\n} from \"@umbraco-cms/backoffice/external/lit\";\nimport { UmbLitElement } from \"@umbraco-cms/backoffice/lit-element\";\nimport { UMB_MODAL_MANAGER_CONTEXT, UmbModalManagerContext } from \"@umbraco-cms/backoffice/modal\";\nimport { UmbTextStyles } from \"@umbraco-cms/backoffice/style\";\nimport { Articulate } from \"../api/articulate/sdk.gen\";\nimport type { ExportBlogMlModel, ImportModel } from \"../api/articulate/types.gen\"; // Consolidate and remove PagedProblemDetailsModel\nimport { ProblemDetails } from \"../api/articulate/types.gen\";\nimport {\n  fetchArchiveDoctypeUdi,\n  fetchNodeByUdi,\n  openNodePicker,\n} from \"../utils/document-node-utils\";\nimport { extractErrorMessage, isErrorWithMessage } from \"../utils/error-utils\";\nimport { showUmbracoNotification } from \"../utils/notification-utils\";\nimport { renderHeaderActions } from \"../utils/template-utils\";\nimport { formStyles } from \"./form-styles\";\n\n// TODO: Export tests\n// TODO: Polish UX / CSS\n\n/**\n * A LitElement-based component for exporting blog content in BlogML format.\n * Provides a form to select a blog node and export its content.\n *\n * @element articulate-blogml-exporter\n * @extends UmbLitElement\n */\n@customElement(\"articulate-blogml-exporter\")\nexport default class ArticulateBlogMlExporterElement extends UmbLitElement {\n  @property({ type: String })\n  routerPath?: string;\n\n  @state() private _isDisabled: boolean = false;\n  @state() private _isLoading: boolean = true;\n  @state() private _isSubmitting = false;\n\n  @state() private _selectedBlogNodeUdi: string | null = null;\n  @state() private _selectedBlogNodeName = \"No node selected\";\n\n  @state() private _downloadUrl: undefined | TemplateResult<1> = undefined;\n\n  private _modalManagerContext?: UmbModalManagerContext;\n  private _archiveDoctypeUdi: string | null = null;\n\n  /**\n   * Creates an instance of ArticulateBlogMlExporterElement.\n   * Sets up the modal manager context.\n   */\n  constructor() {\n    super();\n    this.consumeContext(UMB_MODAL_MANAGER_CONTEXT, (instance) => {\n      this._modalManagerContext = instance;\n    });\n  }\n\n  /**\n   * Lifecycle method called when the element is added to the DOM.\n   * Fetches the Articulate Archive document type UDI.\n   */\n  async connectedCallback() {\n    super.connectedCallback();\n    this._archiveDoctypeUdi = await fetchArchiveDoctypeUdi();\n    if (this._archiveDoctypeUdi === null) {\n      this._isDisabled = true;\n      this._isLoading = false;\n      this.requestUpdate();\n    }\n    this._isLoading = false;\n    this.requestUpdate();\n  }\n\n  /**\n   * Opens the Umbraco document picker to select a blog node.\n   * Updates the selected node UDI and fetches its name.\n   * @private\n   * @returns {Promise<void>}\n   */\n  private async _openNodePicker() {\n    try {\n      const udi = await openNodePicker(this._modalManagerContext!, this._archiveDoctypeUdi!, this);\n      if (udi) {\n        this._selectedBlogNodeName = \"Loading...\";\n        this.requestUpdate();\n        const variant = await fetchNodeByUdi(udi);\n        if (!variant) {\n          throw new Error(`Selected node ${udi} not found`);\n        }\n        this._selectedBlogNodeUdi = udi;\n        this._selectedBlogNodeName = variant.name;\n        this.requestUpdate();\n      }\n      // Modal was closed without a selection, no action needed\n    } catch (error: unknown) {\n      if (isErrorWithMessage(error) && error.message.includes(\"No node selected\")) {\n        return;\n      }\n      const errorMessage = extractErrorMessage(\n        error,\n        \"An error occurred while using the node picker.\",\n      );\n      this._selectedBlogNodeName = \"Error loading node\";\n      this.requestUpdate();\n      await showUmbracoNotification(this, errorMessage, \"danger\");\n    }\n  }\n\n  /**\n   * Handles the form submission for exporting blog content.\n   * Validates the form and initiates the export process.\n   * @private\n   * @param {Event} e - The form submission event.\n   * @returns {Promise<void>}\n   */\n  private async _handleSubmit(e: Event) {\n    e.preventDefault();\n    if (this._isSubmitting) return;\n\n    const form = e.target as HTMLFormElement;\n    const isValid = form.checkValidity();\n\n    if (!isValid) {\n      return;\n    }\n    const formData = new FormData(form);\n    const submitButton = form.querySelector<HTMLElement>('uui-button[look=\"primary\"]');\n\n    const embedImages = formData.get(\"embedImages\") === \"on\";\n\n    const payload: ExportBlogMlModel = {\n      articulateNodeId: this._selectedBlogNodeUdi!,\n      exportImagesAsBase64: embedImages,\n    };\n\n    try {\n      submitButton?.setAttribute(\"state\", \"waiting\");\n      this._isSubmitting = true;\n      this.requestUpdate();\n      const result = await Articulate.postUmbracoManagementApiV1ArticulateBlogExport({\n        body: payload,\n      });\n\n      if (!result.response.ok) {\n        let errorToThrow;\n        try {\n          const problemDetails: ProblemDetails = await result.response.json();\n          errorToThrow = problemDetails;\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        } catch (_) {\n          // Explicitly ignore the caught error object from response.json() parsing,\n          // as we create a new generic error based on HTTP status instead.\n          errorToThrow = new Error(\n            `API Error: ${result.response.status} ${result.response.statusText}`,\n          );\n        }\n        throw errorToThrow;\n      }\n\n      const responseData = result.data as ImportModel;\n\n      if (!responseData || !responseData.downloadUrl) {\n        throw new Error(\"Export completed but no response data was returned.\");\n      }\n\n      if (responseData.downloadUrl) {\n        const downloadLink = responseData.downloadUrl.startsWith(\"http\")\n          ? responseData.downloadUrl\n          : `${window.location.origin}${responseData.downloadUrl}`;\n        this._downloadUrl = html`<a href=\"${downloadLink}\" target=\"_blank\">Download</a>.`;\n      }\n      form.reset();\n      this._selectedBlogNodeUdi = null;\n      this._selectedBlogNodeName = \"No node selected\";\n      this.requestUpdate();\n    } catch (error: unknown) {\n      const errorMessage = extractErrorMessage(error, \"Export failed.\");\n      await showUmbracoNotification(this, errorMessage, \"danger\");\n    } finally {\n      submitButton?.setAttribute(\"state\", \"\");\n      this._isSubmitting = false;\n      this.requestUpdate();\n    }\n  }\n\n  private _closeModal() {\n    this._downloadUrl = undefined;\n    this.requestUpdate();\n  }\n\n  override render() {\n    if (this._isLoading) {\n      return html`<uui-loader-bar></uui-loader-bar>`;\n    }\n\n    if (this._isDisabled) {\n      return html`<uui-box headline=\"BlogML Exporter\">\n        ${renderHeaderActions(this.routerPath)}\n        <span slot=\"header\"><uui-tag look=\"danger\">Disabled</uui-tag></span>\n        <p>Could not retrieve Articulate Archive document type.</p>\n        <p>Ensure that the Articulate package is installed and configured correctly.</p>\n        <p>Check the Articulate documentation for more information.</p>\n      </uui-box>`;\n    }\n\n    return html`\n      <uui-box headline=\"BlogML Exporter\">\n        ${renderHeaderActions(this.routerPath)}\n        <uui-form-validation-message>\n          <uui-form @submit=${this._handleSubmit}>\n            <uui-form-layout-item>\n              <uui-label for=\"blogNodeDisplay\" required>Articulate blog node</uui-label>\n              <div class=\"node-picker-container\">\n                <uui-input\n                  id=\"blogNodeDisplay\"\n                  name=\"blogNodeDisplay\"\n                  .value=${this._selectedBlogNodeName}\n                  readonly\n                  style=\"flex-grow: 1;\"\n                ></uui-input>\n                <uui-button\n                  look=\"outline\"\n                  label=${this._selectedBlogNodeUdi ? \"Change\" : \"Choose\"}\n                  @click=${this._openNodePicker}\n                ></uui-button>\n              </div>\n              <input\n                type=\"hidden\"\n                required\n                name=\"blogNodeId\"\n                .value=${this._selectedBlogNodeUdi || \"\"}\n              />\n              <div slot=\"description\">Choose the Articulate blog node to export from</div>\n            </uui-form-layout-item>\n            <uui-form-layout-item>\n              <uui-label for=\"embedImages\">Embed images?</uui-label>\n              <uui-toggle id=\"embedImages\" name=\"embedImages\"></uui-toggle>\n              <div slot=\"description\">\n                Check if you want to embed images as base64 data in the output file. Useful if your\n                site isn't going to be HTTP accessible to the site you will be importing on.\n              </div>\n            </uui-form-layout-item>\n            <uui-button-group>\n              <uui-button type=\"submit\" look=\"primary\">Submit</uui-button>\n            </uui-button-group>\n          </uui-form>\n        </uui-form-validation-message>\n      </uui-box>\n      ${this._downloadUrl\n        ? html`\n            <uui-modal-container>\n              <uui-modal-dialog>\n                <uui-dialog>\n                  <uui-dialog-layout>\n                    <span slot=\"headline\">\n                      <uui-icon name=\"info\" style=\"color: green;\"></uui-icon> BlogML export\n                      completed</span\n                    >\n                    <p>Your BlogML export is ready to download.</p>\n                    <uui-button slot=\"actions\" look=\"secondary\" @click=${this._closeModal}\n                      >Cancel</uui-button\n                    >\n                    <uui-button\n                      slot=\"actions\"\n                      look=\"primary\"\n                      label=\"Download\"\n                      href=${this._downloadUrl}\n                      target=\"_blank\"\n                      ><uui-icon name=\"download\"></uui-icon> Download</uui-button\n                    >\n                  </uui-dialog-layout>\n                </uui-dialog>\n              </uui-modal-dialog>\n            </uui-modal-container>\n          `\n        : html``}\n    `;\n  }\n\n  static override readonly styles = [\n    UmbTextStyles,\n    formStyles,\n    css`\n      .node-picker-container {\n        display: flex;\n        align-items: center;\n        gap: var(--uui-size-space-3);\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"articulate-blogml-exporter\": ArticulateBlogMlExporterElement;\n  }\n}\n","import {\n  css,\n  customElement,\n  html,\n  property,\n  state,\n  TemplateResult,\n} from \"@umbraco-cms/backoffice/external/lit\";\nimport { UmbLitElement } from \"@umbraco-cms/backoffice/lit-element\";\nimport { UMB_MODAL_MANAGER_CONTEXT, UmbModalManagerContext } from \"@umbraco-cms/backoffice/modal\";\nimport { UmbTextStyles } from \"@umbraco-cms/backoffice/style\";\nimport { Articulate } from \"../api/articulate/sdk.gen\";\nimport type {\n  ImportBlogMlModel,\n  ImportModel,\n  PostResponseModel,\n} from \"../api/articulate/types.gen\";\nimport { ProblemDetails } from \"../api/articulate/types.gen\";\nimport {\n  fetchArchiveDoctypeUdi,\n  fetchNodeByUdi,\n  openNodePicker,\n} from \"../utils/document-node-utils\";\nimport { extractErrorMessage, isErrorWithMessage } from \"../utils/error-utils\";\nimport { showUmbracoNotification } from \"../utils/notification-utils\";\nimport { renderHeaderActions } from \"../utils/template-utils\";\nimport { formStyles } from \"./form-styles\";\n\n// TODO: Import tests\n// TODO: Polish UX / CSS\n\n/**\n * A LitElement-based component for importing blog content from BlogML format.\n * Provides a form to upload a BlogML file and select a target blog node.\n *\n * @element articulate-blogml-importer\n * @extends UmbLitElement\n */\n@customElement(\"articulate-blogml-importer\")\nexport default class ArticulateBlogMlImporterElement extends UmbLitElement {\n  @property({ type: String })\n  routerPath?: string;\n\n  @state() private _isDisabled: boolean = false;\n  @state() private _isLoading: boolean = true;\n  @state() private _isSubmitting = false;\n\n  @state() private _selectedBlogNodeUdi: string | null = null;\n  @state() private _selectedBlogNodeName: string | null = \"No node selected\";\n\n  @state() private _downloadUrl: undefined | TemplateResult<1> = undefined;\n\n  private _modalManagerContext?: UmbModalManagerContext;\n  private _archiveDoctypeUdi: string | null = null;\n\n  /**\n   * Creates an instance of ArticulateBlogMlImporterElement.\n   * Sets up the modal manager context and file reader event handlers.\n   */\n  constructor() {\n    super();\n    this.consumeContext(UMB_MODAL_MANAGER_CONTEXT, (instance) => {\n      this._modalManagerContext = instance;\n    });\n  }\n\n  /**\n   * Lifecycle method called when the element is added to the DOM.\n   * Fetches the Articulate Archive document type UDI.\n   */\n  async connectedCallback() {\n    super.connectedCallback();\n    this._archiveDoctypeUdi = await fetchArchiveDoctypeUdi();\n    if (this._archiveDoctypeUdi === null) {\n      this._isDisabled = true;\n      this._isLoading = false;\n      this.requestUpdate();\n    }\n    this._isLoading = false;\n    this.requestUpdate();\n  }\n\n  /**\n   * Opens the Umbraco document picker to select a blog node.\n   * Updates the selected node UDI and fetches its name.\n   * @private\n   * @returns {Promise<void>}\n   */\n  private async _openNodePicker() {\n    try {\n      const udi = await openNodePicker(this._modalManagerContext!, this._archiveDoctypeUdi!, this);\n      if (udi) {\n        this._selectedBlogNodeName = \"Loading...\";\n        this.requestUpdate();\n        const variant = await fetchNodeByUdi(udi);\n        if (!variant) {\n          throw new Error(`Selected node ${udi} not found`);\n        }\n        this._selectedBlogNodeUdi = udi;\n        this._selectedBlogNodeName = variant.name;\n        this.requestUpdate();\n      }\n      // Modal was closed without a selection, no action needed\n    } catch (error: unknown) {\n      if (isErrorWithMessage(error) && error.message.includes(\"No node selected\")) {\n        return;\n      }\n      const errorMessage = extractErrorMessage(\n        error,\n        \"An error occurred while using the node picker.\",\n      );\n      this._selectedBlogNodeName = \"Error loading node\";\n      this.requestUpdate();\n      await showUmbracoNotification(this, errorMessage, \"danger\");\n    }\n  }\n\n  /**\n   * Handles the form submission for importing blog content.\n   * Validates the form and initiates the import process.\n   * @private\n   * @param {Event} e - The form submission event.\n   * @returns {Promise<void>}\n   */\n  private async _handleSubmit(e: Event) {\n    e.preventDefault();\n    if (this._isSubmitting) return;\n\n    const form = e.target as HTMLFormElement;\n    const isValid = form.checkValidity();\n\n    if (!isValid) {\n      return;\n    }\n\n    const formData = new FormData(form);\n    const submitButton = form.querySelector<HTMLElement>('uui-button[look=\"primary\"]');\n\n    const importFileField = form.elements.namedItem(\"importFile\") as HTMLInputElement;\n    const importFile = importFileField && importFileField.files ? importFileField.files[0] : null;\n\n    try {\n      submitButton?.setAttribute(\"state\", \"waiting\");\n      this._isSubmitting = true;\n      this.requestUpdate();\n\n      // Step 1: Initialize the import (upload file)\n      const formDataUpload = new FormData();\n      formDataUpload.append(importFile!.name, importFile!);\n\n      const initResult = await Articulate.postUmbracoManagementApiV1ArticulateBlogImportBegin({\n        body: formDataUpload as any, // hey-api handles FormData directly\n      });\n\n      if (!initResult.response.ok) {\n        let errorToThrow;\n        try {\n          const problemDetails: ProblemDetails = await initResult.response.json();\n          errorToThrow = problemDetails;\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        } catch (_) {\n          // Explicitly ignore the caught error object from response.json() parsing,\n          // as we create a new generic error based on HTTP status instead.\n          errorToThrow = new Error(\n            `File Upload API Error: ${initResult.response.status} ${initResult.response.statusText}`,\n          );\n        }\n        throw errorToThrow;\n      }\n\n      const initData = initResult.data as PostResponseModel;\n\n      if (!initData || !initData.temporaryFileName) {\n        throw new Error(\"Upload completed but no response data was returned.\");\n      }\n\n      // Step 2: Import the BlogML data using the temporary file name\n      const importPayload: ImportBlogMlModel = {\n        articulateNodeId: this._selectedBlogNodeUdi!,\n        overwrite: formData.get(\"overwrite\") === \"on\",\n        publish: formData.get(\"publish\") === \"on\",\n        regexMatch: (formData.get(\"regexMatch\") as string) || \"\",\n        regexReplace: (formData.get(\"regexReplace\") as string) || \"\",\n        tempFile: initData.temporaryFileName,\n        exportDisqusXml: formData.get(\"disqusExport\") === \"on\",\n        importFirstImage: formData.get(\"importImage\") === \"on\",\n      };\n\n      const importCallResult = await Articulate.postUmbracoManagementApiV1ArticulateBlogImport({\n        body: importPayload,\n      });\n\n      if (!importCallResult.response.ok) {\n        let errorToThrow;\n        try {\n          const problemDetails: ProblemDetails = await importCallResult.response.json();\n          errorToThrow = problemDetails;\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        } catch (_) {\n          // Explicitly ignore the caught error object from response.json() parsing,\n          // as we create a new generic error based on HTTP status instead.\n          errorToThrow = new Error(\n            `Import API Error: ${importCallResult.response.status} ${importCallResult.response.statusText}`,\n          );\n        }\n        throw errorToThrow;\n      }\n\n      const responseData = importCallResult.data as ImportModel;\n\n      if (!responseData) {\n        throw new Error(\"Import completed but no response data was returned.\");\n      }\n\n      if (responseData.downloadUrl) {\n        const downloadLink = responseData.downloadUrl.startsWith(\"http\")\n          ? responseData.downloadUrl\n          : `${window.location.origin}${responseData.downloadUrl}`;\n        this._downloadUrl = html`<a href=\"${downloadLink}\" target=\"_blank\">Download</a>.`;\n      }\n      form.reset();\n      this._selectedBlogNodeUdi = null;\n      this._selectedBlogNodeName = \"No node selected\";\n      this.requestUpdate();\n    } catch (error: unknown) {\n      const errorMessage = extractErrorMessage(error, \"Import failed.\");\n      await showUmbracoNotification(this, errorMessage, \"danger\");\n    } finally {\n      submitButton?.setAttribute(\"state\", \"\");\n      this._isSubmitting = false;\n      this.requestUpdate();\n    }\n  }\n\n  private _closeModal() {\n    this._downloadUrl = undefined;\n    this.requestUpdate();\n  }\n\n  override render() {\n    if (this._isLoading) {\n      return html`<uui-loader-bar></uui-loader-bar>`;\n    }\n\n    if (this._isDisabled) {\n      return html`<uui-box headline=\"BlogML Importer\">\n        ${renderHeaderActions(this.routerPath)}\n        <span slot=\"header\"><uui-tag look=\"danger\">Disabled</uui-tag></span>\n        <p>Could not retrieve Articulate Archive document type.</p>\n        <p>Ensure that the Articulate package is installed and configured correctly.</p>\n        <p>Check the Articulate documentation for more information.</p>\n      </uui-box>`;\n    }\n\n    return html`\n      <uui-box headline=\"BlogML Importer\">\n        ${renderHeaderActions(this.routerPath)}\n        <uui-form-validation-message>\n        <uui-form @submit=${this._handleSubmit}>\n          <uui-form-layout-item>\n            <uui-label for=\"blogNodeDisplay\" required>Articulate blog node</uui-label>\n            <div class=\"node-picker-container\">\n              <uui-input\n                id=\"blogNodeDisplay\"\n                .value=${this._selectedBlogNodeName || \"No node selected. Click 'Add' to choose.\"}\n                readonly\n                style=\"flex-grow: 1;\"\n              ></uui-input>\n              <uui-button\n                look=\"outline\"\n                .label=${this._selectedBlogNodeUdi ? \"Change\" : \"Add\"}\n                @click=${this._openNodePicker}\n                style=\"margin-left: var(--uui-size-space-3);\"\n              ></uui-button>\n            </div>\n            <input\n              type=\"hidden\"\n              name=\"blogNodeValue\"\n              required\n              .value=${this._selectedBlogNodeUdi || \"\"}\n            />\n            <div slot=\"description\">Choose the Articulate blog node to import to</div>\n          </uui-form-layout-item>\n          <uui-form-layout-item>\n            <uui-label for=\"importFile\" required>BlogML import file</uui-label>\n            <uui-input-file\n              id=\"importFile\"\n              accept=\"text/xml\"\n              required\n              name=\"importFile\"\n            ></uui-input-file>\n            <div slot=\"description\">The XML file to upload for import</div>\n          </uui-form-layout-item>\n          <uui-form-layout-item>\n            <uui-label for=\"overwrite\">Overwrite imported posts?</uui-label>\n            <uui-toggle id=\"overwrite\" name=\"overwrite\"></uui-toggle>\n            <div slot=\"description\">Check if you want to overwrite posts already imported</div>\n          </uui-form-layout-item>\n          <uui-form-layout-item>\n            <uui-label for=\"publishAll\">Publish all posts?</uui-label>\n            <uui-toggle id=\"publishAll\" name=\"publishAll\"></uui-toggle>\n            <div slot=\"description\">Check if you want all imported posts to be published</div>\n          </uui-form-layout-item>\n          <uui-form-layout-item>\n            <uui-label for=\"regexMatch\" slot=\"label\">Regex match expression</uui-label>\n            <uui-input\n              id=\"regexMatch\"\n              style=\"--auto-width-text-margin-right: 20px\"\n              name=\"regexMatch\"  auto-width placeholder=\"Example to match: (@example\\.old)\"\n            ></uui-input>\n            <div slot=\"description\">\n              Regex statement used to match content in the blog post to be replaced by the match\n              statement\n            </div>\n          </uui-form-layout-item>\n          <uui-form-layout-item>\n            <uui-label for=\"regexReplace\" slot=\"label\">Regex replacement statement</uui-label>\n            <uui-input\n              id=\"regexReplace\"\n              style=\"--auto-width-text-margin-right: 20px\"\n              name=\"regexReplace\"  auto-width placeholder=\"Example replacement: @example.new\"\n            ></uui-input>\n            <div slot=\"description\">Replacement statement used with the above match statement</div>\n          </uui-form-layout-item>\n          <uui-form-layout-item>\n            <uui-label for=\"disqusExport\">Export Disqus Xml</uui-label>\n            <uui-toggle id=\"disqusExport\" name=\"disqusExport\"></uui-toggle>\n            <div slot=\"description\">\n              If you would like Articulate to output an XML file that you can use to import the\n              comments found in this file in to Disqus\n            </div>\n          </uui-form-layout-item>\n          <uui-form-layout-item>\n            <uui-label for=\"importImage\">Import First Image from Post Attachments</uui-label>\n            <uui-toggle id=\"importImage\" name=\"importImage\"></uui-toggle>\n            <div slot=\"description\">\n              If you would like Articulate to try and import the first image url in the post\n              attachments\n            </div>\n          </uui-form-layout-item>\n          <uui-button-group>\n            <uui-button type=\"submit\" look=\"primary\">Submit</uui-button>\n          </uui-button-group>\n          </uui-form-validation-message>\n        </uui-form>\n      </uui-box>\n      ${\n        this._downloadUrl\n          ? html`\n              <uui-modal-container>\n                <uui-modal-dialog>\n                  <uui-dialog>\n                    <uui-dialog-layout>\n                      <span slot=\"headline\">\n                        <uui-icon name=\"info\" style=\"color: green;\"></uui-icon> BlogML import\n                        completed</span\n                      >\n                      <p>Your Disqus XML import is ready to download.</p>\n                      <uui-button slot=\"actions\" look=\"secondary\" @click=${this._closeModal}\n                        >Cancel</uui-button\n                      >\n                      <uui-button\n                        slot=\"actions\"\n                        look=\"primary\"\n                        label=\"Download\"\n                        href=${this._downloadUrl}\n                        target=\"_blank\"\n                        ><uui-icon name=\"download\"></uui-icon> Download</uui-button\n                      >\n                    </uui-dialog-layout>\n                  </uui-dialog>\n                </uui-modal-dialog>\n              </uui-modal-container>\n            `\n          : html``\n      }\n    `;\n  }\n\n  static override readonly styles = [\n    UmbTextStyles,\n    formStyles,\n    css`\n      .node-picker-container {\n        display: flex;\n        align-items: center;\n        gap: var(--uui-size-space-3);\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"articulate-blogml-importer\": ArticulateBlogMlImporterElement;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=t=>(e,o)=>{void 0!==o?o.addInitializer((()=>{customElements.define(t,e)})):customElements.define(t,e)};export{t as customElement};\n//# sourceMappingURL=custom-element.js.map\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,e=t.ShadowRoot&&(void 0===t.ShadyCSS||t.ShadyCSS.nativeShadow)&&\"adoptedStyleSheets\"in Document.prototype&&\"replace\"in CSSStyleSheet.prototype,s=Symbol(),o=new WeakMap;class n{constructor(t,e,o){if(this._$cssResult$=!0,o!==s)throw Error(\"CSSResult is not constructable. Use `unsafeCSS` or `css` instead.\");this.cssText=t,this.t=e}get styleSheet(){let t=this.o;const s=this.t;if(e&&void 0===t){const e=void 0!==s&&1===s.length;e&&(t=o.get(s)),void 0===t&&((this.o=t=new CSSStyleSheet).replaceSync(this.cssText),e&&o.set(s,t))}return t}toString(){return this.cssText}}const r=t=>new n(\"string\"==typeof t?t:t+\"\",void 0,s),i=(t,...e)=>{const o=1===t.length?t[0]:e.reduce(((e,s,o)=>e+(t=>{if(!0===t._$cssResult$)return t.cssText;if(\"number\"==typeof t)return t;throw Error(\"Value passed to 'css' function must be a 'css' function result: \"+t+\". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.\")})(s)+t[o+1]),t[0]);return new n(o,t,s)},S=(s,o)=>{if(e)s.adoptedStyleSheets=o.map((t=>t instanceof CSSStyleSheet?t:t.styleSheet));else for(const e of o){const o=document.createElement(\"style\"),n=t.litNonce;void 0!==n&&o.setAttribute(\"nonce\",n),o.textContent=e.cssText,s.appendChild(o)}},c=e?t=>t:t=>t instanceof CSSStyleSheet?(t=>{let e=\"\";for(const s of t.cssRules)e+=s.cssText;return r(e)})(t):t;export{n as CSSResult,S as adoptStyles,i as css,c as getCompatibleStyle,e as supportsAdoptingStyleSheets,r as unsafeCSS};\n//# sourceMappingURL=css-tag.js.map\n","import{getCompatibleStyle as t,adoptStyles as s}from\"./css-tag.js\";export{CSSResult,css,supportsAdoptingStyleSheets,unsafeCSS}from\"./css-tag.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const{is:i,defineProperty:e,getOwnPropertyDescriptor:h,getOwnPropertyNames:r,getOwnPropertySymbols:o,getPrototypeOf:n}=Object,a=globalThis,c=a.trustedTypes,l=c?c.emptyScript:\"\",p=a.reactiveElementPolyfillSupport,d=(t,s)=>t,u={toAttribute(t,s){switch(s){case Boolean:t=t?l:null;break;case Object:case Array:t=null==t?t:JSON.stringify(t)}return t},fromAttribute(t,s){let i=t;switch(s){case Boolean:i=null!==t;break;case Number:i=null===t?null:Number(t);break;case Object:case Array:try{i=JSON.parse(t)}catch(t){i=null}}return i}},f=(t,s)=>!i(t,s),b={attribute:!0,type:String,converter:u,reflect:!1,useDefault:!1,hasChanged:f};Symbol.metadata??=Symbol(\"metadata\"),a.litPropertyMetadata??=new WeakMap;class y extends HTMLElement{static addInitializer(t){this._$Ei(),(this.l??=[]).push(t)}static get observedAttributes(){return this.finalize(),this._$Eh&&[...this._$Eh.keys()]}static createProperty(t,s=b){if(s.state&&(s.attribute=!1),this._$Ei(),this.prototype.hasOwnProperty(t)&&((s=Object.create(s)).wrapped=!0),this.elementProperties.set(t,s),!s.noAccessor){const i=Symbol(),h=this.getPropertyDescriptor(t,i,s);void 0!==h&&e(this.prototype,t,h)}}static getPropertyDescriptor(t,s,i){const{get:e,set:r}=h(this.prototype,t)??{get(){return this[s]},set(t){this[s]=t}};return{get:e,set(s){const h=e?.call(this);r?.call(this,s),this.requestUpdate(t,h,i)},configurable:!0,enumerable:!0}}static getPropertyOptions(t){return this.elementProperties.get(t)??b}static _$Ei(){if(this.hasOwnProperty(d(\"elementProperties\")))return;const t=n(this);t.finalize(),void 0!==t.l&&(this.l=[...t.l]),this.elementProperties=new Map(t.elementProperties)}static finalize(){if(this.hasOwnProperty(d(\"finalized\")))return;if(this.finalized=!0,this._$Ei(),this.hasOwnProperty(d(\"properties\"))){const t=this.properties,s=[...r(t),...o(t)];for(const i of s)this.createProperty(i,t[i])}const t=this[Symbol.metadata];if(null!==t){const s=litPropertyMetadata.get(t);if(void 0!==s)for(const[t,i]of s)this.elementProperties.set(t,i)}this._$Eh=new Map;for(const[t,s]of this.elementProperties){const i=this._$Eu(t,s);void 0!==i&&this._$Eh.set(i,t)}this.elementStyles=this.finalizeStyles(this.styles)}static finalizeStyles(s){const i=[];if(Array.isArray(s)){const e=new Set(s.flat(1/0).reverse());for(const s of e)i.unshift(t(s))}else void 0!==s&&i.push(t(s));return i}static _$Eu(t,s){const i=s.attribute;return!1===i?void 0:\"string\"==typeof i?i:\"string\"==typeof t?t.toLowerCase():void 0}constructor(){super(),this._$Ep=void 0,this.isUpdatePending=!1,this.hasUpdated=!1,this._$Em=null,this._$Ev()}_$Ev(){this._$ES=new Promise((t=>this.enableUpdating=t)),this._$AL=new Map,this._$E_(),this.requestUpdate(),this.constructor.l?.forEach((t=>t(this)))}addController(t){(this._$EO??=new Set).add(t),void 0!==this.renderRoot&&this.isConnected&&t.hostConnected?.()}removeController(t){this._$EO?.delete(t)}_$E_(){const t=new Map,s=this.constructor.elementProperties;for(const i of s.keys())this.hasOwnProperty(i)&&(t.set(i,this[i]),delete this[i]);t.size>0&&(this._$Ep=t)}createRenderRoot(){const t=this.shadowRoot??this.attachShadow(this.constructor.shadowRootOptions);return s(t,this.constructor.elementStyles),t}connectedCallback(){this.renderRoot??=this.createRenderRoot(),this.enableUpdating(!0),this._$EO?.forEach((t=>t.hostConnected?.()))}enableUpdating(t){}disconnectedCallback(){this._$EO?.forEach((t=>t.hostDisconnected?.()))}attributeChangedCallback(t,s,i){this._$AK(t,i)}_$ET(t,s){const i=this.constructor.elementProperties.get(t),e=this.constructor._$Eu(t,i);if(void 0!==e&&!0===i.reflect){const h=(void 0!==i.converter?.toAttribute?i.converter:u).toAttribute(s,i.type);this._$Em=t,null==h?this.removeAttribute(e):this.setAttribute(e,h),this._$Em=null}}_$AK(t,s){const i=this.constructor,e=i._$Eh.get(t);if(void 0!==e&&this._$Em!==e){const t=i.getPropertyOptions(e),h=\"function\"==typeof t.converter?{fromAttribute:t.converter}:void 0!==t.converter?.fromAttribute?t.converter:u;this._$Em=e,this[e]=h.fromAttribute(s,t.type)??this._$Ej?.get(e)??null,this._$Em=null}}requestUpdate(t,s,i){if(void 0!==t){const e=this.constructor,h=this[t];if(i??=e.getPropertyOptions(t),!((i.hasChanged??f)(h,s)||i.useDefault&&i.reflect&&h===this._$Ej?.get(t)&&!this.hasAttribute(e._$Eu(t,i))))return;this.C(t,s,i)}!1===this.isUpdatePending&&(this._$ES=this._$EP())}C(t,s,{useDefault:i,reflect:e,wrapped:h},r){i&&!(this._$Ej??=new Map).has(t)&&(this._$Ej.set(t,r??s??this[t]),!0!==h||void 0!==r)||(this._$AL.has(t)||(this.hasUpdated||i||(s=void 0),this._$AL.set(t,s)),!0===e&&this._$Em!==t&&(this._$Eq??=new Set).add(t))}async _$EP(){this.isUpdatePending=!0;try{await this._$ES}catch(t){Promise.reject(t)}const t=this.scheduleUpdate();return null!=t&&await t,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){if(!this.isUpdatePending)return;if(!this.hasUpdated){if(this.renderRoot??=this.createRenderRoot(),this._$Ep){for(const[t,s]of this._$Ep)this[t]=s;this._$Ep=void 0}const t=this.constructor.elementProperties;if(t.size>0)for(const[s,i]of t){const{wrapped:t}=i,e=this[s];!0!==t||this._$AL.has(s)||void 0===e||this.C(s,void 0,i,e)}}let t=!1;const s=this._$AL;try{t=this.shouldUpdate(s),t?(this.willUpdate(s),this._$EO?.forEach((t=>t.hostUpdate?.())),this.update(s)):this._$EM()}catch(s){throw t=!1,this._$EM(),s}t&&this._$AE(s)}willUpdate(t){}_$AE(t){this._$EO?.forEach((t=>t.hostUpdated?.())),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(t)),this.updated(t)}_$EM(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$ES}shouldUpdate(t){return!0}update(t){this._$Eq&&=this._$Eq.forEach((t=>this._$ET(t,this[t]))),this._$EM()}updated(t){}firstUpdated(t){}}y.elementStyles=[],y.shadowRootOptions={mode:\"open\"},y[d(\"elementProperties\")]=new Map,y[d(\"finalized\")]=new Map,p?.({ReactiveElement:y}),(a.reactiveElementVersions??=[]).push(\"2.1.0\");export{y as ReactiveElement,s as adoptStyles,u as defaultConverter,t as getCompatibleStyle,f as notEqual};\n//# sourceMappingURL=reactive-element.js.map\n","import{defaultConverter as t,notEqual as e}from\"../reactive-element.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const o={attribute:!0,type:String,converter:t,reflect:!1,hasChanged:e},r=(t=o,e,r)=>{const{kind:n,metadata:i}=r;let s=globalThis.litPropertyMetadata.get(i);if(void 0===s&&globalThis.litPropertyMetadata.set(i,s=new Map),\"setter\"===n&&((t=Object.create(t)).wrapped=!0),s.set(r.name,t),\"accessor\"===n){const{name:o}=r;return{set(r){const n=e.get.call(this);e.set.call(this,r),this.requestUpdate(o,n,t)},init(e){return void 0!==e&&this.C(o,void 0,t,e),e}}}if(\"setter\"===n){const{name:o}=r;return function(r){const n=this[o];e.call(this,r),this.requestUpdate(o,n,t)}}throw Error(\"Unsupported decorator location: \"+n)};function n(t){return(e,o)=>\"object\"==typeof o?r(t,e,o):((t,e,o)=>{const r=e.hasOwnProperty(o);return e.constructor.createProperty(o,t),r?Object.getOwnPropertyDescriptor(e,o):void 0})(t,e,o)}export{n as property,r as standardProperty};\n//# sourceMappingURL=property.js.map\n","import{property as t}from\"./property.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */function r(r){return t({...r,state:!0,attribute:!1})}export{r as state};\n//# sourceMappingURL=state.js.map\n","import { css, html } from \"@umbraco-cms/backoffice/external/lit\";\nimport { UmbLitElement } from \"@umbraco-cms/backoffice/lit-element\";\nimport { UmbTextStyles } from \"@umbraco-cms/backoffice/style\";\nimport { customElement, property, state } from \"lit/decorators.js\";\nimport { Articulate } from \"../api/articulate/sdk.gen.ts\";\nimport { ProblemDetails } from \"../api/articulate/types.gen.ts\";\nimport { extractErrorMessage } from \"../utils/error-utils.ts\";\nimport { showUmbracoNotification } from \"../utils/notification-utils.ts\";\nimport { renderHeaderActions } from \"../utils/template-utils.ts\";\n\n/**\n * A component for duplicating Articulate themes with a new name.\n * Provides a form to select an existing theme and specify a new name for the duplicate.\n *\n * @element articulate-copy-theme\n * @extends UmbLitElement\n */\n@customElement(\"articulate-copy-theme\")\nexport default class ArticulateCopyThemeElement extends UmbLitElement {\n  @property({ type: String })\n  routerPath?: string;\n\n  @state() private _isLoading = true;\n  @state() private _isSubmitting = false;\n  @state() private _themes: string[] = [];\n\n  private _newThemeName = \"\";\n  @state() private _selectedTheme: string | null = null;\n\n  /**\n   * Fetches the list of available themes.\n   * @private\n   */\n  async connectedCallback() {\n    super.connectedCallback();\n    await this._loadThemes();\n    this._isLoading = false;\n    this.requestUpdate();\n  }\n\n  private async _loadThemes() {\n    try {\n      const result = await Articulate.getUmbracoManagementApiV1ArticulateThemesList();\n\n      if (!result.response.ok) {\n        let errorToThrow: Error | ProblemDetails;\n        try {\n          const problemDetails: ProblemDetails = await result.response.json();\n          errorToThrow = problemDetails;\n        } catch {\n          errorToThrow = new Error(\n            `API Error: ${result.response.status} ${result.response.statusText}`,\n          );\n        }\n        throw errorToThrow;\n      }\n      const data = await result.data;\n      if (!data) {\n        throw new Error(\"Failed to load themes.\");\n      }\n\n      this._themes = data?.map((theme) => theme) ?? [];\n    } catch (error) {\n      this._themes = [];\n      const extractedMessage = extractErrorMessage(error, \"Could not load themes.\");\n      await showUmbracoNotification(this, extractedMessage, \"danger\");\n    }\n  }\n\n  /**\n   * Selects a theme to duplicate.\n   * @private\n   * @param {string} theme - The name of the theme to select.\n   */\n  private _selectTheme(theme: string) {\n    this._selectedTheme = theme;\n    this._newThemeName = `${theme} - Copy`;\n    this.requestUpdate();\n  }\n\n  private _handleSelectThemeButtonClick(event: Event, themeName: string) {\n    event.stopPropagation();\n    this._selectTheme(themeName);\n  }\n\n  private _onCardSelected(event: Event) {\n    const card = event.target as HTMLElement;\n    const theme = card.getAttribute(\"data-theme\");\n    if (theme) {\n      this._selectTheme(theme);\n    }\n  }\n\n  private _onCardDeselected(event: Event) {\n    const card = event.target as HTMLElement;\n    const theme = card.getAttribute(\"data-theme\");\n    if (theme && theme === this._selectedTheme) {\n      this._selectedTheme = null;\n    }\n  }\n\n  #onNewThemeNameChange = (e: Event) => {\n    this._newThemeName = (e.target as HTMLInputElement).value;\n  };\n\n  #onCancelClick = () => {\n    this._selectedTheme = null;\n  };\n\n  /**\n   * Handles form submission for duplicating a theme.\n   * @private\n   * @param {Event} e - The form submission event.\n   * @returns {Promise<void>}\n   */\n  private async _duplicateTheme() {\n    if (this._isSubmitting || !this._selectedTheme || !this._newThemeName) return;\n    try {\n      this._isSubmitting = true;\n      this.requestUpdate();\n      const result = await Articulate.postUmbracoManagementApiV1ArticulateThemesCopy({\n        body: {\n          themeName: this._selectedTheme,\n          newThemeName: this._newThemeName,\n        },\n      });\n\n      if (!result.response.ok) {\n        throw new Error(`Failed to duplicate theme: ${result.response.statusText}`);\n      }\n\n      await showUmbracoNotification(this, \"Theme duplicated successfully!\", \"positive\");\n      this._selectedTheme = null;\n      this._newThemeName = \"\";\n      this.requestUpdate();\n    } catch (error) {\n      console.error(\"Error duplicating theme:\", error);\n      const errorMessage = extractErrorMessage(\n        error,\n        \"Failed to duplicate theme. Please try again.\",\n      );\n      await showUmbracoNotification(this, errorMessage, \"danger\");\n    } finally {\n      this._isSubmitting = false;\n      this.requestUpdate();\n    }\n  }\n\n  /**\n   * Renders the theme grid.\n   * @private\n   * @returns {TemplateResult} The theme grid template.\n   */\n  private _renderThemeGrid() {\n    if ((this._themes?.length ?? 0) > 0) {\n      return html`\n        <div class=\"theme-grid\">\n          ${(this._themes ?? []).map(\n            (theme: string) => html`\n              <uui-card-media\n                class=\"theme-card\"\n                .name=${theme}\n                ?selectable=${true}\n                ?selected=${this._selectedTheme === theme}\n                selectOnly\n                @selected=${this._onCardSelected}\n                @deselected=${this._onCardDeselected}\n                data-theme=${theme}\n              >\n                <img\n                  class=\"theme-preview-img\"\n                  src=\"/App_Plugins/Articulate/BackOffice/assets/theme-${theme.toLowerCase()}.png\"\n                  alt=\"${theme} theme preview\"\n                  loading=\"lazy\"\n                  @error=${(e: Event) => {\n                    const img = e.target as HTMLImageElement;\n                    img.style.display = \"none\";\n\n                    const parent = img.parentElement;\n                    if (!parent) return;\n\n                    if (!parent.querySelector(\":scope > .theme-fallback-initial\")) {\n                      const span = document.createElement(\"span\");\n                      span.className = \"theme-fallback-initial\";\n                      span.textContent = theme.charAt(0).toUpperCase();\n                      parent.appendChild(span);\n                    }\n                  }}\n                />\n                <div slot=\"actions\">\n                  <uui-button\n                    look=\"primary\"\n                    label=\"Select Theme ${theme}\"\n                    @click=${(e: Event) => this._handleSelectThemeButtonClick(e, theme)}\n                  >\n                    Select\n                  </uui-button>\n                </div>\n              </uui-card-media>\n            `,\n          )}\n        </div>\n      `;\n    }\n\n    return html`\n      <p\n        class=\"no-themes-message\"\n        style=\"text-align: center; margin-block: var(--uui-size-space-5);\"\n      >\n        No themes available.\n      </p>\n    `;\n  }\n\n  /**\n   * Renders the duplicate form.\n   * @private\n   * @returns {TemplateResult} The duplicate form template.\n   */\n  private _renderDuplicateForm() {\n    if (!this._selectedTheme) {\n      return html``;\n    }\n\n    const duplicateButtonLabel = this._isSubmitting ? \"Duplicating...\" : \"Duplicate\";\n\n    return html`\n      <div class=\"duplicate-form\">\n        <h3>Duplicate '${this._selectedTheme}' Theme</h3>\n        <p>Create a copy of this theme that you can customize.</p>\n\n        <uui-form-layout-item>\n          <uui-label for=\"newThemeName\" slot=\"label\" required>New theme name</uui-label>\n          <uui-input\n            id=\"newThemeName\"\n            .value=${this._newThemeName}\n            @input=${this.#onNewThemeNameChange}\n            required\n            ?disabled=${this._isSubmitting}\n          ></uui-input>\n        </uui-form-layout-item>\n\n        <div class=\"form-actions\">\n          <uui-button\n            look=\"primary\"\n            color=\"positive\"\n            label=\"Duplicate\"\n            type=\"button\"\n            @click=${() => this._duplicateTheme()}\n            ?disabled=${!this._newThemeName || this._isSubmitting}\n            .state=${this._isSubmitting ? \"waiting\" : \"\"}\n          >\n            ${duplicateButtonLabel}\n          </uui-button>\n\n          <uui-button\n            look=\"secondary\"\n            label=\"Cancel\"\n            @click=${this.#onCancelClick}\n            ?disabled=${this._isSubmitting}\n          >\n            Cancel\n          </uui-button>\n        </div>\n      </div>\n    `;\n  }\n\n  override render() {\n    if (this._isLoading) {\n      return html`<uui-loader-bar></uui-loader-bar>`;\n    }\n\n    return html`\n      <uui-box headline=\"Theme Duplication\">\n        ${renderHeaderActions(this.routerPath)}\n        <div class=\"container\">\n          <p>\n            You can duplicate any of Articulate's built-in themes to customize them yourself. The\n            duplicated theme will be copied to the ~/Views/Articulate folder where you can edit it.\n            Then you can select this theme from the themes drop down on your Articulate root node to\n            use it.\n          </p>\n        </div>\n        <div class=\"container\">${this._renderThemeGrid()} ${this._renderDuplicateForm()}</div>\n      </uui-box>\n    `;\n  }\n\n  static override readonly styles = [\n    UmbTextStyles,\n    css`\n      .theme-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n        gap: var(--uui-size-space-4);\n        margin: var(--uui-size-space-5) 0;\n        justify-content: center;\n      }\n      .theme-card {\n        cursor: pointer;\n        border: 1px solid var(--uui-color-border-emphasis);\n        width: 100%;\n        height: 170px;\n        box-sizing: border-box;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: space-between;\n        padding: var(--uui-size-space-2);\n      }\n      .theme-preview-img {\n        width: 100px;\n        height: 100px;\n        object-fit: contain;\n        background-color: var(--uui-color-surface-alt);\n        border-radius: var(--uui-border-radius);\n        box-sizing: border-box;\n        margin-bottom: var(--uui-size-space-2);\n      }\n      .theme-fallback-initial {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 100%;\n        height: 100%;\n        font-size: 3rem;\n        font-weight: bold;\n        color: var(--uui-color-text-alt);\n        background-color: var(--uui-color-surface-alt);\n        border-radius: var(--uui-border-radius);\n        box-sizing: border-box;\n      }\n      .duplicate-form {\n        background: var(--uui-color-surface);\n        padding: var(--uui-size-space-4);\n        border-radius: var(--uui-border-radius);\n        margin-top: var(--uui-size-space-4);\n      }\n      .form-actions {\n        display: flex;\n        gap: var(--uui-size-space-3);\n        margin-top: var(--uui-size-space-3);\n      }\n      .container {\n        padding-block-start: var(--uui-size-space-3);\n      }\n      @media (max-width: var(--uui-breakpoint-sm)) {\n        :host {\n          padding: var(--uui-size-space-3);\n        }\n        .theme-grid {\n          grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n        }\n      }\n      .no-themes-message {\n        color: var(--uui-color-text-alt);\n        text-align: center;\n        margin-block: var(--uui-size-layout-1);\n      }\n    `,\n  ];\n}\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"articulate-copy-theme\": ArticulateCopyThemeElement;\n  }\n}\n","import type { TemplateResult } from \"@umbraco-cms/backoffice/external/lit\";\nimport { css, customElement, html, property } from \"@umbraco-cms/backoffice/external/lit\";\nimport { UmbLitElement } from \"@umbraco-cms/backoffice/lit-element\";\nimport { UmbTextStyles } from \"@umbraco-cms/backoffice/style\";\n\nconst dashboards = [\n  {\n    path: \"blogml/import\",\n    name: \"BlogML Import\",\n    icon: \"add\",\n    description: \"Import content from any BlogML compatible platform\",\n  },\n  {\n    path: \"blogml/export\",\n    name: \"BlogML Export\",\n    icon: \"download\",\n    description: \"Export content to any BlogML compatible platform\",\n  },\n  {\n    path: \"theme/copy\",\n    name: \"Copy Theme\",\n    icon: \"copy\",\n    description: \"Copy Articulate themes for customization\",\n  },\n];\n\n/**\n * A dashboard component that displays navigation options for Articulate features.\n * Provides a grid of cards for accessing different Articulate management sections.\n *\n * @element articulate-dashboard-options\n * @extends UmbLitElement\n */\n@customElement(\"articulate-dashboard-options\")\nexport default class ArticulateDashboardOptionsElement extends UmbLitElement {\n  @property({ type: String })\n  routerPath = \"\";\n\n  /**\n   * Renders a navigation card with the specified details.\n   * @private\n   * @param {string} name - The name of the card.\n   * @param {string} description - The description text for the card.\n   * @param {string} icon - The icon to display on the card.\n   * @param {string} fullHref - The path to navigate to when the card is clicked.\n   * @returns {TemplateResult} The rendered card template.\n   */\n  private _renderCards(): TemplateResult {\n    return html`\n      ${dashboards.map((d) => {\n        const basePath = this.routerPath?.replace(/\\/$/, \"\");\n        const fullHref = `${basePath}/${d.path}`;\n        return html`\n          <uui-card-block-type\n            class=\"tool-card\"\n            name=\"${d.name}\"\n            description=\"${d.description}\"\n            href=${fullHref}\n          >\n            <uui-icon name=\"${d.icon}\"></uui-icon>\n          </uui-card-block-type>\n        `;\n      })}\n    `;\n  }\n\n  /**\n   * Renders the dashboard options grid with navigation cards.\n   * @override\n   * @returns {TemplateResult} The rendered dashboard options template.\n   */\n  render() {\n    return html`\n      <uui-box headline=\"Options\">\n        <div class=\"tools-grid\">${this._renderCards()}</div>\n      </uui-box>\n    `;\n  }\n\n  static readonly styles = [\n    UmbTextStyles,\n    css`\n      .tools-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(290px, 1fr));\n        gap: var(--uui-size-space-5);\n      }\n\n      .tool-card {\n        min-width: 0;\n        height: 128px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        text-align: center;\n      }\n\n      uui-card,\n      uui-card-block-type {\n        transition: var(--uui-animation-duration) var(--uui-animation-easing);\n      }\n      @media (max-width: 768px) {\n        .tools-grid {\n          gap: var(--uui-size-space-4);\n        }\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"articulate-dashboard-options\": ArticulateDashboardOptionsElement;\n  }\n}\n","import { css, customElement, html, state } from \"@umbraco-cms/backoffice/external/lit\";\nimport { UmbLitElement } from \"@umbraco-cms/backoffice/lit-element\";\nimport type { UmbRoute, UmbRouterSlotInitEvent } from \"@umbraco-cms/backoffice/router\";\n\nimport { UmbTextStyles } from \"@umbraco-cms/backoffice/style\";\nimport ArticulateBlogMlExporterElement from \"../components/articulate-blogml-exporter.element.js\";\nimport ArticulateBlogMlImporterElement from \"../components/articulate-blogml-importer.element.js\";\nimport ArticulateCopyThemeElement from \"../components/articulate-copy-theme.element.js\";\nimport ArticulateDashboardOptionsElement from \"../components/articulate-dashboard-options.element.js\";\n\n@customElement(\"articulate-dashboard-root\")\nexport default class ArticulateDashboardRootElement extends UmbLitElement {\n  @state() private _routerBasePath?: string;\n  @state() private _routes: UmbRoute[];\n\n  constructor() {\n    super();\n    this._routes = [\n      {\n        path: \"blogml/import\",\n        component: ArticulateBlogMlImporterElement,\n        setup: (el) => {\n          if (this._routerBasePath && el instanceof ArticulateBlogMlImporterElement)\n            el.routerPath = this._routerBasePath;\n        },\n      },\n      {\n        path: \"blogml/export\",\n        component: ArticulateBlogMlExporterElement,\n        setup: (el) => {\n          if (this._routerBasePath && el instanceof ArticulateBlogMlExporterElement)\n            el.routerPath = this._routerBasePath;\n        },\n      },\n      {\n        path: \"theme/copy\",\n        component: ArticulateCopyThemeElement,\n        setup: (el) => {\n          if (this._routerBasePath && el instanceof ArticulateCopyThemeElement)\n            el.routerPath = this._routerBasePath;\n        },\n      },\n      {\n        path: \"\",\n        component: ArticulateDashboardOptionsElement,\n        setup: (el) => {\n          if (this._routerBasePath && el instanceof ArticulateDashboardOptionsElement)\n            el.routerPath = this._routerBasePath;\n        },\n      },\n      {\n        path: \"**\",\n        component: async () =>\n          (await import(\"@umbraco-cms/backoffice/router\")).UmbRouteNotFoundElement,\n      },\n    ];\n  }\n\n  override render() {\n    return html`\n      <umb-body-layout>\n        <div slot=\"header\" class=\"header-container\">\n          <div class=\"articulate-header\">\n            <h3 class=\"header-title\">Articulate Management</h3>\n            <div class=\"header-logo\">√£</div>\n          </div>\n        </div>\n        <div class=\"dashboard-container\">\n          <umb-router-slot\n            .routes=${this._routes}\n            @init=${(event: UmbRouterSlotInitEvent) => {\n              this._routerBasePath = event.target.absoluteRouterPath;\n            }}\n          ></umb-router-slot>\n        </div>\n      </umb-body-layout>\n    `;\n  }\n\n  static override readonly styles = [\n    UmbTextStyles,\n    css`\n      :host {\n        display: block;\n        padding: var(--uui-size-space-5);\n      }\n\n      .header-container {\n        width: 100%;\n        padding: 0 var(--uui-size-space-3);\n      }\n\n      .articulate-header {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        width: 100%;\n        height: 69px;\n        background: var(--uui-color-surface);\n        border-radius: var(--uui-border-radius);\n        box-shadow: var(--uui-shadow-1);\n        box-sizing: border-box;\n        padding: 0 2rem;\n        margin: 0;\n        position: relative;\n      }\n      .header-title {\n        font-size: var(--uui-type-h3-size);\n        font-weight: 700;\n        letter-spacing: 0.01em;\n        color: var(--uui-color-text);\n        display: flex;\n        align-items: center;\n        height: 100%;\n      }\n      .header-logo {\n        font-weight: 900;\n        font-size: var(--uui-type-h1-size);\n        color: #c44;\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n        height: 100%;\n      }\n      @media (max-width: 768px) {\n        :host {\n          padding: var(--uui-size-space-3);\n        }\n        .articulate-header {\n          padding: 1rem 0.7rem;\n        }\n      }\n      .dashboard-container {\n        max-width: var(--uui-size-content-large);\n        margin: 0 auto;\n        padding: 0 var(--uui-size-space-3);\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"articulate-dashboard-root\": ArticulateDashboardRootElement;\n  }\n}\n","import ArticulateDashboardRootElement from \"./articulate-dashboard-root.element\";\n\nconst dashboardManifest: UmbExtensionManifest = {\n  type: \"dashboard\",\n  alias: \"Articulate.BackOffice.Dashboard\",\n  name: \"Articulate Dashboard\",\n  element: ArticulateDashboardRootElement,\n  weight: 100,\n  meta: {\n    label: \"Articulate\",\n    pathname: \"articulate\",\n  },\n  conditions: [\n    {\n      alias: \"Umb.Condition.SectionAlias\",\n      match: \"Umb.Section.Settings\",\n    },\n  ],\n};\n\nexport const manifest = dashboardManifest;\n","export const manifests: Array<UmbExtensionManifest> = [\n  {\n    type: \"propertyEditorUi\",\n    alias: \"Articulate.PropertyEditorUi.MarkdownEditor\",\n    name: \"Articulate Markdown Editor\",\n    element: () => import(\"./property-editor-ui-markdown-editor.element.js\"),\n    meta: {\n      label: \"Articulate Markdown Editor\",\n      propertyEditorSchemaAlias: \"Umbraco.MarkdownEditor\",\n      icon: \"icon-code\",\n      group: \"richContent\",\n      supportsReadOnly: true,\n      settings: {\n        properties: [\n          {\n            alias: \"preview\",\n            label: \"Preview\",\n            description: \"Display a live preview\",\n            propertyEditorUiAlias: \"Umb.PropertyEditorUi.Toggle\", // Required field\n          },\n        ],\n      },\n    },\n  },\n];\n","import { manifests as articulateMarkdownManifest } from \"./markdown-editor/articulate-manifests.js\";\n\nexport const manifests: Array<UmbExtensionManifest> = [...articulateMarkdownManifest];\n","import { manifests as propertyEditors } from \"./property-editors/manifests.js\";\n\nexport const manifests: Array<UmbExtensionManifest> = [...propertyEditors];\n","import { UMB_AUTH_CONTEXT } from \"@umbraco-cms/backoffice/auth\";\nimport type { UmbEntryPointOnInit } from \"@umbraco-cms/backoffice/extension-api\";\nimport { client } from \"../api/articulate/client.gen\";\nimport { manifest } from \"../dashboards/manifests\";\nimport { manifests } from \"../packages/markdown-editor/manifests\";\n\nexport const onInit: UmbEntryPointOnInit = (host, extensionRegistry) => {\n  extensionRegistry.register(manifest);\n  extensionRegistry.registerMany(manifests);\n  host.consumeContext(UMB_AUTH_CONTEXT, (authContext) => {\n    const config = authContext?.getOpenApiConfiguration();\n\n    client.setConfig({\n      auth: config?.token ?? undefined,\n      baseUrl: config?.base ?? \"\",\n      credentials: config?.credentials ?? \"same-origin\",\n    });\n  });\n};\n"],"names":["fetchArchiveDoctypeUdi","result","Articulate","errorDetails","error","fetchNodeByUdi","udi","response","DocumentService","_a","openNodePicker","modalManager","doctypeUdi","host","doc","renderHeaderActions","routerPath","html","formStyles","css","ArticulateBlogMlExporterElement","UmbLitElement","UMB_MODAL_MANAGER_CONTEXT","instance","variant","isErrorWithMessage","errorMessage","extractErrorMessage","showUmbracoNotification","e","form","formData","submitButton","embedImages","payload","errorToThrow","responseData","downloadLink","UmbTextStyles","__decorateClass","property","state","customElement","ArticulateBlogMlImporterElement","importFileField","importFile","formDataUpload","initResult","initData","importPayload","importCallResult","t","o","s","n$2","r","n","S","c","i","h","a","l","p","d","u","f","b","y","_b","_onNewThemeNameChange","_onCancelClick","ArticulateCopyThemeElement","__privateAdd","data","theme","extractedMessage","event","themeName","img","parent","span","duplicateButtonLabel","__privateGet","dashboards","ArticulateDashboardOptionsElement","fullHref","ArticulateDashboardRootElement","el","dashboardManifest","manifest","manifests","articulateMarkdownManifest","propertyEditors","onInit","extensionRegistry","UMB_AUTH_CONTEXT","authContext","config","client"],"mappings":"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","x_google_ignoreList":[5,6,7,8,9]}