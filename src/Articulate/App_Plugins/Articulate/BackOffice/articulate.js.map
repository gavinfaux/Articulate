{"version":3,"file":"articulate.js","sources":["../../../Client/src/utils/document-node-utils.ts","../../../Client/src/components/form-styles.ts","../../../Client/src/components/articulate-blogml-exporter.element.ts","../../../Client/src/components/articulate-blogml-importer.element.ts","../../../Client/src/components/articulate-dashboard-options.element.ts","../../../Client/node_modules/@lit/reactive-element/decorators/custom-element.js","../../../Client/node_modules/@lit/reactive-element/css-tag.js","../../../Client/node_modules/@lit/reactive-element/reactive-element.js","../../../Client/node_modules/@lit/reactive-element/decorators/property.js","../../../Client/node_modules/@lit/reactive-element/decorators/state.js","../../../Client/src/components/articulate-duplicate-theme.element.ts","../../../Client/src/dashboards/articulate-dashboard-root.element.ts","../../../Client/src/dashboards/manifests.ts","../../../Client/src/entrypoints/entrypoint.ts"],"sourcesContent":["import type { UmbDocumentItemModel } from \"@umbraco-cms/backoffice/document\";\nimport type { UmbLitElement } from \"@umbraco-cms/backoffice/lit-element\";\nimport type { UmbModalManagerContext } from \"@umbraco-cms/backoffice/modal\";\nimport { Articulate } from \"../api/articulate/sdk.gen\";\nimport { extractErrorMessage } from \"./error-utils\";\nimport { showUmbracoNotification } from \"./notification-utils\";\n\nexport async function fetchArchiveDoctypeUdi(target: UmbLitElement): Promise<string> {\n  try {\n    const result = await Articulate.getUmbracoManagementApiV1ArticulateBlogArchiveid({\n      throwOnError: true,\n    });\n    if (!result.response.ok) {\n      let errorToThrow;\n      try {\n        errorToThrow = await result.response.json();\n      } catch {\n        errorToThrow = new Error(\n          `API Error: ${result.response.status} ${result.response.statusText}`,\n        );\n      }\n      throw errorToThrow;\n    }\n    return result.data;\n  } catch (error) {\n    const errorMessage = extractErrorMessage(\n      error,\n      \"Could not fetch ArticulateArchive doctype UDI. Please check logs.\",\n    );\n    await showUmbracoNotification(target, errorMessage, \"danger\");\n    throw error;\n  }\n}\n\nexport async function fetchNodeNameByUdi(target: UmbLitElement, udi: string): Promise<string> {\n  if (!udi) return \"No node selected\";\n  try {\n    const result = await Articulate.getUmbracoManagementApiV1ArticulateBlogNodename({\n      query: { id: udi },\n      throwOnError: true,\n    });\n    if (!result.response.ok) {\n      let errorToThrow;\n      try {\n        errorToThrow = await result.response.json();\n      } catch {\n        errorToThrow = new Error(\n          `API Error: ${result.response.status} ${result.response.statusText}`,\n        );\n      }\n      throw errorToThrow;\n    }\n    return result.data;\n  } catch (error) {\n    const errorMessage = extractErrorMessage(\n      error,\n      \"Could not fetch node name. Please check logs.\",\n    );\n    await showUmbracoNotification(target, errorMessage, \"danger\");\n    throw error;\n  }\n}\n\nexport async function openArchiveNodePicker(\n  modalManager: UmbModalManagerContext,\n  archiveDoctypeUdi: string,\n  target: UmbLitElement,\n): Promise<string | null> {\n  const modalContext = modalManager.open(target, \"UMB_DOCUMENT_PICKER_MODAL\", {\n    data: {\n      multiple: false,\n      filter: (doc: UmbDocumentItemModel) => doc.documentType?.unique === archiveDoctypeUdi,\n    },\n  });\n  try {\n    const result = (await modalContext.onSubmit()) as { selection: string[] } | undefined;\n    if (result && result.selection && result.selection.length > 0) {\n      return result.selection[0] ?? null;\n    }\n    return null;\n  } catch (error) {\n    const errorMessage = extractErrorMessage(error, \"Node picker modal failed. Please check logs.\");\n    await showUmbracoNotification(target, errorMessage, \"danger\");\n    throw error;\n  }\n}\n","import { css } from \"@umbraco-cms/backoffice/external/lit\";\n\nexport const formStyles = css`\n  uui-box {\n    margin-top: var(--uui-size-space-6);\n    max-width: var(--uui-size-content);\n    margin-inline: auto;\n  }\n\n  uui-form-layout-item {\n    margin-bottom: var(--uui-size-space-4);\n  }\n\n  uui-label {\n    min-width: var(--uui-size-input-medium);\n    font-weight: var(--uui-weight-medium);\n  }\n\n  .form-actions {\n    margin-top: var(--uui-size-space-6);\n    text-align: right;\n  }\n`;\n","import {\n  css,\n  customElement,\n  html,\n  property,\n  state,\n  unsafeHTML,\n} from \"@umbraco-cms/backoffice/external/lit\";\nimport { UmbLitElement } from \"@umbraco-cms/backoffice/lit-element\";\nimport { UMB_MODAL_MANAGER_CONTEXT, UmbModalManagerContext } from \"@umbraco-cms/backoffice/modal\";\nimport { UmbTextStyles } from \"@umbraco-cms/backoffice/style\";\nimport { Articulate } from \"../api/articulate/sdk.gen\";\nimport type { ExportBlogMlModel, ImportModel } from \"../api/articulate/types.gen\"; // Consolidate and remove PagedProblemDetailsModel\nimport { ProblemDetails } from \"../api/articulate/types.gen\";\nimport {\n  fetchArchiveDoctypeUdi,\n  fetchNodeNameByUdi,\n  openArchiveNodePicker,\n} from \"../utils/document-node-utils\";\nimport { extractErrorMessage } from \"../utils/error-utils\";\nimport { setFormMessage, showUmbracoNotification } from \"../utils/notification-utils\";\nimport { formStyles } from \"./form-styles\";\n\n// TODO: Export tests\n// TODO: Polish UX / CSS\n\n@customElement(\"articulate-blogml-exporter\")\nexport default class ArticulateBlogMlExporterElement extends UmbLitElement {\n  @property({ type: String })\n  routerPath?: string;\n\n  @state() private _isSubmitting = false;\n  @state() public _formMessageType: \"positive\" | \"error\" | \"\" = \"\";\n  @state() public _formMessageText = \"\";\n\n  // ... other state properties remain unchanged\n  @state() private _selectedBlogNodeUdi: string | null = null;\n  @state() private _selectedBlogNodeName = \"No node selected\";\n  @state() private _archiveDoctypeUdi = \"\";\n\n  private _modalManagerContext?: UmbModalManagerContext;\n\n  constructor() {\n    super();\n    this.consumeContext(UMB_MODAL_MANAGER_CONTEXT, (instance) => {\n      this._modalManagerContext = instance;\n    });\n  }\n\n  async connectedCallback() {\n    super.connectedCallback();\n    await this._fetchArchiveDoctypeUdi();\n  }\n\n  private async _fetchArchiveDoctypeUdi() {\n    this._archiveDoctypeUdi = await fetchArchiveDoctypeUdi(this);\n  }\n\n  // _showMessage removed; use setFormMessage(this, type, message) instead\n\n  private async _openNodePicker() {\n    if (!this._modalManagerContext) return;\n    const selectedNodeUnique = await openArchiveNodePicker(\n      this._modalManagerContext,\n      this._archiveDoctypeUdi,\n      this,\n    );\n    if (selectedNodeUnique) {\n      this._selectedBlogNodeUdi = selectedNodeUnique;\n      await this._fetchNodeName(selectedNodeUnique);\n      this.requestUpdate(\"_selectedBlogNodeName\");\n      this.requestUpdate(\"_selectedBlogNodeUdi\");\n    }\n  }\n\n  private async _fetchNodeName(udi: string) {\n    this._selectedBlogNodeName = await fetchNodeNameByUdi(this, udi);\n    this.requestUpdate(\"_selectedBlogNodeName\");\n  }\n\n  private async _handleSubmit(e: Event) {\n    e.preventDefault();\n    if (this._isSubmitting) return;\n\n    const form = e.target as HTMLFormElement;\n    const formData = new FormData(form);\n    const submitButton = form.querySelector<HTMLElement>('uui-button[look=\"primary\"]');\n\n    if (!submitButton) return;\n    setFormMessage(this, \"\", \"\");\n\n    if (!this._selectedBlogNodeUdi) {\n      setFormMessage(this, \"error\", \"Please select an Articulate blog node to export from.\");\n      return;\n    }\n\n    const embedImages = formData.get(\"embedImages\") === \"on\";\n\n    const payload: ExportBlogMlModel = {\n      articulateNodeId: this._selectedBlogNodeUdi,\n      exportImagesAsBase64: embedImages,\n    };\n\n    try {\n      this._isSubmitting = true;\n      submitButton.setAttribute(\"state\", \"waiting\");\n\n      const result = await Articulate.postUmbracoManagementApiV1ArticulateBlogPostExport({\n        body: payload,\n      });\n\n      if (!result.response.ok) {\n        let errorToThrow;\n        try {\n          const problemDetails: ProblemDetails = await result.response.json();\n          errorToThrow = problemDetails;\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        } catch (_) {\n          // Explicitly ignore the caught error object from response.json() parsing,\n          // as we create a new generic error based on HTTP status instead.\n          errorToThrow = new Error(\n            `API Error: ${result.response.status} ${result.response.statusText}`,\n          );\n        }\n        throw errorToThrow;\n      }\n\n      const responseData = result.data as ImportModel;\n      let successMessage = \"BlogML export completed successfully.\";\n      if (responseData && responseData.downloadUrl) {\n        const downloadLink = responseData.downloadUrl.startsWith(\"http\")\n          ? responseData.downloadUrl\n          : `${window.location.origin}${responseData.downloadUrl}`;\n        successMessage = `BlogML export completed. <a href=\"${downloadLink}\" target=\"_blank\">Download exported file</a>.`;\n      }\n\n      setFormMessage(this, \"positive\", successMessage);\n      // reset form fields or selections here?\n      form.reset();\n      this._selectedBlogNodeUdi = null;\n      this._selectedBlogNodeName = \"No node selected\";\n      this.requestUpdate();\n    } catch (error: unknown) {\n      console.error(\"BlogML Export Error:\", error);\n      const errorMessage = extractErrorMessage(\n        error,\n        \"Export failed. Please check the logs for more details.\",\n      );\n      await showUmbracoNotification(this, errorMessage, \"danger\");\n      setFormMessage(this, \"error\", errorMessage);\n    } finally {\n      this._isSubmitting = false;\n      submitButton.setAttribute(\"state\", \"default\");\n    }\n  }\n\n  override render() {\n    if (!this.routerPath) {\n      return html`<uui-loader-bar></uui-loader-bar>`;\n    }\n\n    return html`\n      <uui-box headline=\"BlogML Exporter\">\n        <div slot=\"header-actions\">\n          <uui-button\n            label=\"Back to Articulate dashboard options\"\n            look=\"outline\"\n            compact\n            href=${this.routerPath || \"/umbraco/section/settings/dashboard/articulate\"}\n          >\n            ← Back\n          </uui-button>\n        </div>\n        <uui-form @submit=${this._handleSubmit}>\n          <uui-form-layout-item>\n            <uui-label for=\"blogNodeDisplay\" required slot=\"label\">Articulate blog node</uui-label>\n            <div slot=\"description\">Choose the Articulate blog node to export from</div>\n            <div class=\"node-picker-container\">\n              <uui-input\n                id=\"blogNodeDisplay\"\n                name=\"blogNodeDisplay\"\n                .value=${this._selectedBlogNodeName}\n                readonly\n                style=\"flex-grow: 1;\"\n              ></uui-input>\n              <uui-button\n                look=\"outline\"\n                label=${this._selectedBlogNodeUdi ? \"Change\" : \"Add\"}\n                @click=${this._openNodePicker}\n              ></uui-button>\n            </div>\n            <input type=\"hidden\" name=\"blogNodeId\" .value=${this._selectedBlogNodeUdi || \"\"} />\n          </uui-form-layout-item>\n          <uui-form-layout-item>\n            <uui-label for=\"embedImages\" slot=\"label\">Embed images?</uui-label>\n            <div slot=\"description\">\n              Check if you want to embed images as base64 data in the output file. Useful if your\n              site isn't going to be HTTP accessible to the site you will be importing on.\n            </div>\n            <uui-toggle id=\"embedImages\" name=\"embedImages\"></uui-toggle>\n          </uui-form-layout-item>\n          <uui-form-validation-message\n            class=\"${this._formMessageType === \"positive\"\n              ? \"form-message-positive\"\n              : this._formMessageType === \"error\"\n                ? \"form-message-error\"\n                : \"\"}\"\n          >\n            ${unsafeHTML(this._formMessageText)}\n          </uui-form-validation-message>\n          <div class=\"form-actions\">\n            <uui-button look=\"primary\" label=\"Submit\">Submit</uui-button>\n          </div>\n        </uui-form>\n      </uui-box>\n    `;\n  }\n\n  static override readonly styles = [\n    UmbTextStyles,\n    formStyles,\n    css`\n      .form-message-positive {\n        color: var(--uui-color-positive-emphasis);\n      }\n      .form-message-error {\n        color: var(--uui-color-danger-emphasis);\n      }\n      .node-picker-container {\n        display: flex;\n        align-items: center;\n        gap: var(--uui-size-space-3);\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"articulate-blogml-exporter\": ArticulateBlogMlExporterElement;\n  }\n}\n","import {\n  css,\n  customElement,\n  html,\n  property,\n  state,\n  unsafeHTML,\n} from \"@umbraco-cms/backoffice/external/lit\";\nimport { UmbLitElement } from \"@umbraco-cms/backoffice/lit-element\";\nimport { UMB_MODAL_MANAGER_CONTEXT, UmbModalManagerContext } from \"@umbraco-cms/backoffice/modal\";\nimport { UmbTextStyles } from \"@umbraco-cms/backoffice/style\";\nimport { Articulate } from \"../api/articulate/sdk.gen\";\nimport type {\n  ImportBlogMlModel,\n  ImportModel,\n  PostResponseModel,\n} from \"../api/articulate/types.gen\";\nimport { ProblemDetails } from \"../api/articulate/types.gen\";\nimport {\n  fetchArchiveDoctypeUdi,\n  fetchNodeNameByUdi,\n  openArchiveNodePicker,\n} from \"../utils/document-node-utils\";\nimport { extractErrorMessage } from \"../utils/error-utils\";\nimport { setFormMessage, showUmbracoNotification } from \"../utils/notification-utils\";\nimport { formStyles } from \"./form-styles\";\n\n// TODO: Import tests\n// TODO: Polish UX / CSS\n\n@customElement(\"articulate-blogml-importer\")\nexport default class ArticulateBlogMlImporterElement extends UmbLitElement {\n  @property({ type: String })\n  routerPath?: string;\n\n  @state() private _isSubmitting = false;\n  @state() public _formMessageType: \"positive\" | \"error\" | \"\" = \"\";\n  @state() public _formMessageText = \"\";\n\n  // ... other state properties remain unchanged\n  @state() private _selectedBlogNodeUdi: string | null = null;\n  @state() private _selectedBlogNodeName: string | null = null;\n  @state() private _archiveDoctypeUdi = \"\";\n\n  private _modalManagerContext?: UmbModalManagerContext;\n\n  constructor() {\n    super();\n    this.consumeContext(UMB_MODAL_MANAGER_CONTEXT, (instance) => {\n      this._modalManagerContext = instance;\n    });\n  }\n\n  async connectedCallback() {\n    super.connectedCallback();\n    await this._fetchArchiveDoctypeUdi();\n  }\n\n  private async _fetchArchiveDoctypeUdi() {\n    try {\n      this._archiveDoctypeUdi = await fetchArchiveDoctypeUdi(this);\n    } catch (error) {\n      console.error(\"Error fetching ArticulateArchive doctype UDI:\", error);\n      const errorMessage = extractErrorMessage(\n        error,\n        \"Could not fetch ArticulateArchive doctype UDI. Please check logs.\",\n      );\n      await showUmbracoNotification(this, errorMessage, \"danger\");\n    }\n  }\n\n  private async _openNodePicker() {\n    if (!this._modalManagerContext) return;\n    const selectedNodeUnique = await openArchiveNodePicker(\n      this._modalManagerContext,\n      this._archiveDoctypeUdi,\n      this,\n    );\n    if (selectedNodeUnique) {\n      this._selectedBlogNodeUdi = selectedNodeUnique;\n      await this._fetchNodeName(selectedNodeUnique);\n      this.requestUpdate(\"_selectedBlogNodeName\");\n      this.requestUpdate(\"_selectedBlogNodeUdi\");\n    }\n  }\n\n  private async _fetchNodeName(udi: string) {\n    this._selectedBlogNodeName = await fetchNodeNameByUdi(this, udi);\n    this.requestUpdate(\"_selectedBlogNodeName\");\n  }\n\n  private async _handleSubmit(e: Event) {\n    e.preventDefault();\n    if (this._isSubmitting) return;\n\n    const form = e.target as HTMLFormElement;\n    const formData = new FormData(form);\n    const submitButton = form.querySelector<HTMLElement>('uui-button[look=\"primary\"]');\n\n    if (!submitButton) return;\n\n    setFormMessage(this, \"\", \"\");\n\n    const blogNodeUdi = this._selectedBlogNodeUdi;\n    const importFileField = form.elements.namedItem(\"importFile\") as HTMLInputElement;\n    const importFile = importFileField && importFileField.files ? importFileField.files[0] : null;\n\n    if (!blogNodeUdi) {\n      setFormMessage(this, \"error\", \"Please select an Articulate blog node to import to.\");\n      return;\n    }\n\n    if (!importFile || importFile.size === 0) {\n      setFormMessage(this, \"error\", \"Please select a BlogML file to import.\");\n      return;\n    }\n\n    try {\n      this._isSubmitting = true;\n      submitButton.setAttribute(\"state\", \"waiting\");\n\n      // Step 1: Initialize the import (upload file)\n      setFormMessage(this, \"\", \"Uploading file, please wait...\");\n      const formDataUpload = new FormData();\n      formDataUpload.append(importFile.name, importFile);\n\n      const initResult = await Articulate.postUmbracoManagementApiV1ArticulateBlogPostInit({\n        body: formDataUpload as any, // hey-api handles FormData directly\n        throwOnError: true,\n      });\n\n      if (!initResult.response.ok) {\n        let errorToThrow;\n        try {\n          const problemDetails: ProblemDetails = await initResult.response.json();\n          errorToThrow = problemDetails;\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        } catch (_) {\n          // Explicitly ignore the caught error object from response.json() parsing,\n          // as we create a new generic error based on HTTP status instead.\n          errorToThrow = new Error(\n            `File Upload API Error: ${initResult.response.status} ${initResult.response.statusText}`,\n          );\n        }\n        throw errorToThrow;\n      }\n\n      const initData = initResult.data as PostResponseModel;\n\n      if (!initData || !initData.temporaryFileName) {\n        throw new Error(\"File upload initialization failed: No temporary file name returned.\");\n      }\n\n      setFormMessage(this, \"\", `File uploaded. Importing ${initData.postCount} posts...`);\n\n      // Step 2: Import the BlogML data using the temporary file name\n      const importPayload: ImportBlogMlModel = {\n        articulateNodeId: blogNodeUdi,\n        overwrite: formData.get(\"overwrite\") === \"on\",\n        publish: formData.get(\"publish\") === \"on\",\n        regexMatch: (formData.get(\"regexMatch\") as string) || \"\",\n        regexReplace: (formData.get(\"regexReplace\") as string) || \"\",\n        tempFile: initData.temporaryFileName,\n        exportDisqusXml: formData.get(\"disqusExport\") === \"on\",\n        importFirstImage: formData.get(\"importImage\") === \"on\",\n      };\n\n      const importCallResult = await Articulate.postUmbracoManagementApiV1ArticulateBlogPostImport({\n        body: importPayload,\n        throwOnError: true,\n      });\n\n      if (!importCallResult.response.ok) {\n        let errorToThrow;\n        try {\n          const problemDetails: ProblemDetails = await importCallResult.response.json();\n          errorToThrow = problemDetails;\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        } catch (_) {\n          // Explicitly ignore the caught error object from response.json() parsing,\n          // as we create a new generic error based on HTTP status instead.\n          errorToThrow = new Error(\n            `Import API Error: ${importCallResult.response.status} ${importCallResult.response.statusText}`,\n          );\n        }\n        throw errorToThrow;\n      }\n\n      const importResponseData = importCallResult.data as ImportModel;\n\n      let successMessage = \"BlogML import completed successfully.\";\n      if (importResponseData && importResponseData.downloadUrl) {\n        const downloadLink = importResponseData.downloadUrl.startsWith(\"http\")\n          ? importResponseData.downloadUrl\n          : `${window.location.origin}${importResponseData.downloadUrl}`;\n        successMessage = `BlogML import completed. <a href=\"${downloadLink}\" target=\"_blank\">Download import log/status</a>.`;\n      }\n\n      setFormMessage(this, \"positive\", successMessage);\n      // reset form fields or selections here?\n      form.reset();\n      this._selectedBlogNodeUdi = null;\n      this._selectedBlogNodeName = null;\n      this.requestUpdate();\n    } catch (error: unknown) {\n      console.error(\"BlogML Import Error:\", error);\n      const errorMessage = extractErrorMessage(\n        error,\n        \"Import failed. Please check the logs for more details.\",\n      );\n      await showUmbracoNotification(this, errorMessage, \"danger\");\n    } finally {\n      this._isSubmitting = false;\n      submitButton.setAttribute(\"state\", \"default\");\n    }\n  }\n\n  override render() {\n    if (!this.routerPath) {\n      return html`<uui-loader-bar></uui-loader-bar>`;\n    }\n    return html`\n      <uui-box headline=\"BlogML Importer\">\n        <div slot=\"header-actions\">\n          <uui-button\n            label=\"Back to Articulate dashboard options\"\n            look=\"outline\"\n            compact\n            href=${this.routerPath || \"/umbraco/section/settings/dashboard/articulate\"}\n          >\n            ← Back\n          </uui-button>\n        </div>\n        <uui-form @submit=${this._handleSubmit}>\n          <uui-form-layout-item>\n            <uui-label for=\"blogNodeDisplay\" slot=\"label\" required>Articulate blog node</uui-label>\n            <div class=\"node-picker-container\">\n              <uui-input\n                id=\"blogNodeDisplay\"\n                .value=${this._selectedBlogNodeName || \"No node selected. Click 'Add' to choose.\"}\n                readonly\n                style=\"flex-grow: 1;\"\n              ></uui-input>\n              <uui-button\n                look=\"outline\"\n                .label=${this._selectedBlogNodeUdi ? \"Change\" : \"Add\"}\n                @click=${this._openNodePicker}\n                style=\"margin-left: var(--uui-size-space-3);\"\n              ></uui-button>\n            </div>\n            <input type=\"hidden\" name=\"blogNodeValue\" .value=${this._selectedBlogNodeUdi || \"\"} />\n            <div slot=\"description\">Choose the Articulate blog node to import to</div>\n          </uui-form-layout-item>\n          <uui-form-layout-item>\n            <uui-label for=\"importFile\">BlogML import file</uui-label>\n            <uui-input-file id=\"importFile\" name=\"importFile\"></uui-input-file>\n          </uui-form-layout-item>\n          <uui-form-layout-item>\n            <uui-label for=\"overwrite\">Overwrite imported posts?</uui-label>\n            <uui-toggle id=\"overwrite\" name=\"overwrite\"></uui-toggle>\n            <div slot=\"description\">Check if you want to overwrite posts already imported</div>\n          </uui-form-layout-item>\n          <uui-form-layout-item>\n            <uui-label for=\"publishAll\">Publish all posts?</uui-label>\n            <uui-toggle id=\"publishAll\" name=\"publishAll\"></uui-toggle>\n            <div slot=\"description\">Check if you want all imported posts to be published</div>\n          </uui-form-layout-item>\n          <uui-form-layout-item>\n            <uui-label for=\"regexMatch\" slot=\"label\">Regex match expression</uui-label>\n            <uui-input id=\"regexMatch\" name=\"regexMatch\"></uui-input>\n            <div slot=\"description\">\n              Regex statement used to match content in the blog post to be replaced by the match\n              statement\n            </div>\n          </uui-form-layout-item>\n          <uui-form-layout-item>\n            <uui-label for=\"regexReplace\" slot=\"label\">Regex replacement statement</uui-label>\n            <uui-input id=\"regexReplace\" name=\"regexReplace\"></uui-input>\n            <div slot=\"description\">Replacement statement used with the above match statement</div>\n          </uui-form-layout-item>\n          <uui-form-layout-item>\n            <uui-label for=\"disqusExport\">Export Disqus Xml</uui-label>\n            <uui-toggle id=\"disqusExport\" name=\"disqusExport\"></uui-toggle>\n            <div slot=\"description\">\n              If you would like Articulate to output an XML file that you can use to import the\n              comments found in this file in to Disqus\n            </div>\n          </uui-form-layout-item>\n          <uui-form-layout-item>\n            <uui-label for=\"importImage\">Import First Image from Post Attachments</uui-label>\n            <uui-toggle id=\"importImage\" name=\"importImage\"></uui-toggle>\n            <div slot=\"description\">\n              If you would like Articulate to try and import the first image url in the post\n              attachments\n            </div>\n          </uui-form-layout-item>\n          <uui-form-validation-message\n            class=\"${this._formMessageType === \"positive\"\n              ? \"form-message-positive\"\n              : this._formMessageType === \"error\"\n                ? \"form-message-error\"\n                : \"\"}\"\n          >\n            ${unsafeHTML(this._formMessageText)}\n          </uui-form-validation-message>\n          <div class=\"form-actions\">\n            <uui-button look=\"primary\" label=\"Submit\">Submit</uui-button>\n          </div>\n        </uui-form>\n      </uui-box>\n    `;\n  }\n\n  static override readonly styles = [\n    UmbTextStyles,\n    formStyles,\n    css`\n      .form-message-positive {\n        color: var(--uui-color-positive-emphasis);\n      }\n\n      .form-message-error {\n        color: var(--uui-color-danger-emphasis);\n      }\n      .node-picker-container {\n        display: flex;\n        align-items: center;\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"articulate-blogml-importer\": ArticulateBlogMlImporterElement;\n  }\n}\n","import { css, customElement, html, property } from \"@umbraco-cms/backoffice/external/lit\";\nimport { UmbLitElement } from \"@umbraco-cms/backoffice/lit-element\";\nimport { UmbTextStyles } from \"@umbraco-cms/backoffice/style\";\n\nconst dashboards = [\n  {\n    path: \"blogml/import\",\n    name: \"BlogML Importer\",\n    icon: \"sync\",\n    description: \"Import content from any BlogML compatible platform\",\n  },\n  {\n    path: \"blogml/export\",\n    name: \"BlogML Exporter\",\n    icon: \"download\",\n    description: \"Export content to any BlogML compatible platform\",\n  },\n  {\n    path: \"theme/collection\",\n    name: \"Themes\",\n    icon: \"wand\",\n    description: \"Manage customization of Articulate themes\",\n  },\n];\n\n@customElement(\"articulate-dashboard-options\")\nexport default class ArticulateDashboardOptionsElement extends UmbLitElement {\n  @property({ type: String })\n  routerPath?: string;\n\n  override render() {\n    if (!this.routerPath) {\n      return html`<uui-loader-bar></uui-loader-bar>`;\n    }\n    return html`\n      <uui-box headline=\"Options\">\n        <div class=\"tools-grid\">\n          ${dashboards.map((d) => {\n            const basePath = this.routerPath?.replace(/\\/$/, \"\");\n            const fullHref = `${basePath}/${d.path}`;\n            return html`\n              <uui-card-block-type\n                class=\"tool-card\"\n                name=\"${d.name}\"\n                description=\"${d.description}\"\n                href=${fullHref}\n              >\n                <uui-icon name=\"${d.icon}\"></uui-icon>\n              </uui-card-block-type>\n            `;\n          })}\n        </div>\n      </uui-box>\n    `;\n  }\n\n  static override readonly styles = [\n    UmbTextStyles,\n    css`\n      .tools-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(290px, 1fr));\n        gap: var(--uui-size-space-5);\n      }\n\n      .tool-card {\n        min-width: 0;\n        height: 128px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        text-align: center;\n      }\n\n      uui-card,\n      uui-card-block-type {\n        transition: var(--uui-animation-duration) var(--uui-animation-easing);\n      }\n      @media (max-width: 768px) {\n        .tools-grid {\n          gap: var(--uui-size-space-4);\n        }\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"articulate-dashboard-options\": ArticulateDashboardOptionsElement;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=t=>(e,o)=>{void 0!==o?o.addInitializer((()=>{customElements.define(t,e)})):customElements.define(t,e)};export{t as customElement};\n//# sourceMappingURL=custom-element.js.map\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,e=t.ShadowRoot&&(void 0===t.ShadyCSS||t.ShadyCSS.nativeShadow)&&\"adoptedStyleSheets\"in Document.prototype&&\"replace\"in CSSStyleSheet.prototype,s=Symbol(),o=new WeakMap;class n{constructor(t,e,o){if(this._$cssResult$=!0,o!==s)throw Error(\"CSSResult is not constructable. Use `unsafeCSS` or `css` instead.\");this.cssText=t,this.t=e}get styleSheet(){let t=this.o;const s=this.t;if(e&&void 0===t){const e=void 0!==s&&1===s.length;e&&(t=o.get(s)),void 0===t&&((this.o=t=new CSSStyleSheet).replaceSync(this.cssText),e&&o.set(s,t))}return t}toString(){return this.cssText}}const r=t=>new n(\"string\"==typeof t?t:t+\"\",void 0,s),i=(t,...e)=>{const o=1===t.length?t[0]:e.reduce(((e,s,o)=>e+(t=>{if(!0===t._$cssResult$)return t.cssText;if(\"number\"==typeof t)return t;throw Error(\"Value passed to 'css' function must be a 'css' function result: \"+t+\". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.\")})(s)+t[o+1]),t[0]);return new n(o,t,s)},S=(s,o)=>{if(e)s.adoptedStyleSheets=o.map((t=>t instanceof CSSStyleSheet?t:t.styleSheet));else for(const e of o){const o=document.createElement(\"style\"),n=t.litNonce;void 0!==n&&o.setAttribute(\"nonce\",n),o.textContent=e.cssText,s.appendChild(o)}},c=e?t=>t:t=>t instanceof CSSStyleSheet?(t=>{let e=\"\";for(const s of t.cssRules)e+=s.cssText;return r(e)})(t):t;export{n as CSSResult,S as adoptStyles,i as css,c as getCompatibleStyle,e as supportsAdoptingStyleSheets,r as unsafeCSS};\n//# sourceMappingURL=css-tag.js.map\n","import{getCompatibleStyle as t,adoptStyles as s}from\"./css-tag.js\";export{CSSResult,css,supportsAdoptingStyleSheets,unsafeCSS}from\"./css-tag.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const{is:i,defineProperty:e,getOwnPropertyDescriptor:h,getOwnPropertyNames:r,getOwnPropertySymbols:o,getPrototypeOf:n}=Object,a=globalThis,c=a.trustedTypes,l=c?c.emptyScript:\"\",p=a.reactiveElementPolyfillSupport,d=(t,s)=>t,u={toAttribute(t,s){switch(s){case Boolean:t=t?l:null;break;case Object:case Array:t=null==t?t:JSON.stringify(t)}return t},fromAttribute(t,s){let i=t;switch(s){case Boolean:i=null!==t;break;case Number:i=null===t?null:Number(t);break;case Object:case Array:try{i=JSON.parse(t)}catch(t){i=null}}return i}},f=(t,s)=>!i(t,s),b={attribute:!0,type:String,converter:u,reflect:!1,useDefault:!1,hasChanged:f};Symbol.metadata??=Symbol(\"metadata\"),a.litPropertyMetadata??=new WeakMap;class y extends HTMLElement{static addInitializer(t){this._$Ei(),(this.l??=[]).push(t)}static get observedAttributes(){return this.finalize(),this._$Eh&&[...this._$Eh.keys()]}static createProperty(t,s=b){if(s.state&&(s.attribute=!1),this._$Ei(),this.prototype.hasOwnProperty(t)&&((s=Object.create(s)).wrapped=!0),this.elementProperties.set(t,s),!s.noAccessor){const i=Symbol(),h=this.getPropertyDescriptor(t,i,s);void 0!==h&&e(this.prototype,t,h)}}static getPropertyDescriptor(t,s,i){const{get:e,set:r}=h(this.prototype,t)??{get(){return this[s]},set(t){this[s]=t}};return{get:e,set(s){const h=e?.call(this);r?.call(this,s),this.requestUpdate(t,h,i)},configurable:!0,enumerable:!0}}static getPropertyOptions(t){return this.elementProperties.get(t)??b}static _$Ei(){if(this.hasOwnProperty(d(\"elementProperties\")))return;const t=n(this);t.finalize(),void 0!==t.l&&(this.l=[...t.l]),this.elementProperties=new Map(t.elementProperties)}static finalize(){if(this.hasOwnProperty(d(\"finalized\")))return;if(this.finalized=!0,this._$Ei(),this.hasOwnProperty(d(\"properties\"))){const t=this.properties,s=[...r(t),...o(t)];for(const i of s)this.createProperty(i,t[i])}const t=this[Symbol.metadata];if(null!==t){const s=litPropertyMetadata.get(t);if(void 0!==s)for(const[t,i]of s)this.elementProperties.set(t,i)}this._$Eh=new Map;for(const[t,s]of this.elementProperties){const i=this._$Eu(t,s);void 0!==i&&this._$Eh.set(i,t)}this.elementStyles=this.finalizeStyles(this.styles)}static finalizeStyles(s){const i=[];if(Array.isArray(s)){const e=new Set(s.flat(1/0).reverse());for(const s of e)i.unshift(t(s))}else void 0!==s&&i.push(t(s));return i}static _$Eu(t,s){const i=s.attribute;return!1===i?void 0:\"string\"==typeof i?i:\"string\"==typeof t?t.toLowerCase():void 0}constructor(){super(),this._$Ep=void 0,this.isUpdatePending=!1,this.hasUpdated=!1,this._$Em=null,this._$Ev()}_$Ev(){this._$ES=new Promise((t=>this.enableUpdating=t)),this._$AL=new Map,this._$E_(),this.requestUpdate(),this.constructor.l?.forEach((t=>t(this)))}addController(t){(this._$EO??=new Set).add(t),void 0!==this.renderRoot&&this.isConnected&&t.hostConnected?.()}removeController(t){this._$EO?.delete(t)}_$E_(){const t=new Map,s=this.constructor.elementProperties;for(const i of s.keys())this.hasOwnProperty(i)&&(t.set(i,this[i]),delete this[i]);t.size>0&&(this._$Ep=t)}createRenderRoot(){const t=this.shadowRoot??this.attachShadow(this.constructor.shadowRootOptions);return s(t,this.constructor.elementStyles),t}connectedCallback(){this.renderRoot??=this.createRenderRoot(),this.enableUpdating(!0),this._$EO?.forEach((t=>t.hostConnected?.()))}enableUpdating(t){}disconnectedCallback(){this._$EO?.forEach((t=>t.hostDisconnected?.()))}attributeChangedCallback(t,s,i){this._$AK(t,i)}_$ET(t,s){const i=this.constructor.elementProperties.get(t),e=this.constructor._$Eu(t,i);if(void 0!==e&&!0===i.reflect){const h=(void 0!==i.converter?.toAttribute?i.converter:u).toAttribute(s,i.type);this._$Em=t,null==h?this.removeAttribute(e):this.setAttribute(e,h),this._$Em=null}}_$AK(t,s){const i=this.constructor,e=i._$Eh.get(t);if(void 0!==e&&this._$Em!==e){const t=i.getPropertyOptions(e),h=\"function\"==typeof t.converter?{fromAttribute:t.converter}:void 0!==t.converter?.fromAttribute?t.converter:u;this._$Em=e,this[e]=h.fromAttribute(s,t.type)??this._$Ej?.get(e)??null,this._$Em=null}}requestUpdate(t,s,i){if(void 0!==t){const e=this.constructor,h=this[t];if(i??=e.getPropertyOptions(t),!((i.hasChanged??f)(h,s)||i.useDefault&&i.reflect&&h===this._$Ej?.get(t)&&!this.hasAttribute(e._$Eu(t,i))))return;this.C(t,s,i)}!1===this.isUpdatePending&&(this._$ES=this._$EP())}C(t,s,{useDefault:i,reflect:e,wrapped:h},r){i&&!(this._$Ej??=new Map).has(t)&&(this._$Ej.set(t,r??s??this[t]),!0!==h||void 0!==r)||(this._$AL.has(t)||(this.hasUpdated||i||(s=void 0),this._$AL.set(t,s)),!0===e&&this._$Em!==t&&(this._$Eq??=new Set).add(t))}async _$EP(){this.isUpdatePending=!0;try{await this._$ES}catch(t){Promise.reject(t)}const t=this.scheduleUpdate();return null!=t&&await t,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){if(!this.isUpdatePending)return;if(!this.hasUpdated){if(this.renderRoot??=this.createRenderRoot(),this._$Ep){for(const[t,s]of this._$Ep)this[t]=s;this._$Ep=void 0}const t=this.constructor.elementProperties;if(t.size>0)for(const[s,i]of t){const{wrapped:t}=i,e=this[s];!0!==t||this._$AL.has(s)||void 0===e||this.C(s,void 0,i,e)}}let t=!1;const s=this._$AL;try{t=this.shouldUpdate(s),t?(this.willUpdate(s),this._$EO?.forEach((t=>t.hostUpdate?.())),this.update(s)):this._$EM()}catch(s){throw t=!1,this._$EM(),s}t&&this._$AE(s)}willUpdate(t){}_$AE(t){this._$EO?.forEach((t=>t.hostUpdated?.())),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(t)),this.updated(t)}_$EM(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$ES}shouldUpdate(t){return!0}update(t){this._$Eq&&=this._$Eq.forEach((t=>this._$ET(t,this[t]))),this._$EM()}updated(t){}firstUpdated(t){}}y.elementStyles=[],y.shadowRootOptions={mode:\"open\"},y[d(\"elementProperties\")]=new Map,y[d(\"finalized\")]=new Map,p?.({ReactiveElement:y}),(a.reactiveElementVersions??=[]).push(\"2.1.0\");export{y as ReactiveElement,s as adoptStyles,u as defaultConverter,t as getCompatibleStyle,f as notEqual};\n//# sourceMappingURL=reactive-element.js.map\n","import{defaultConverter as t,notEqual as e}from\"../reactive-element.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const o={attribute:!0,type:String,converter:t,reflect:!1,hasChanged:e},r=(t=o,e,r)=>{const{kind:n,metadata:i}=r;let s=globalThis.litPropertyMetadata.get(i);if(void 0===s&&globalThis.litPropertyMetadata.set(i,s=new Map),\"setter\"===n&&((t=Object.create(t)).wrapped=!0),s.set(r.name,t),\"accessor\"===n){const{name:o}=r;return{set(r){const n=e.get.call(this);e.set.call(this,r),this.requestUpdate(o,n,t)},init(e){return void 0!==e&&this.C(o,void 0,t,e),e}}}if(\"setter\"===n){const{name:o}=r;return function(r){const n=this[o];e.call(this,r),this.requestUpdate(o,n,t)}}throw Error(\"Unsupported decorator location: \"+n)};function n(t){return(e,o)=>\"object\"==typeof o?r(t,e,o):((t,e,o)=>{const r=e.hasOwnProperty(o);return e.constructor.createProperty(o,t),r?Object.getOwnPropertyDescriptor(e,o):void 0})(t,e,o)}export{n as property,r as standardProperty};\n//# sourceMappingURL=property.js.map\n","import{property as t}from\"./property.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */function r(r){return t({...r,state:!0,attribute:!1})}export{r as state};\n//# sourceMappingURL=state.js.map\n","import { css, html } from \"@umbraco-cms/backoffice/external/lit\";\nimport { UmbLitElement } from \"@umbraco-cms/backoffice/lit-element\";\nimport { UmbTextStyles } from \"@umbraco-cms/backoffice/style\";\nimport { customElement, property, state } from \"lit/decorators.js\";\nimport { Articulate } from \"../api/articulate/sdk.gen\";\nimport {\n  PostUmbracoManagementApiV1ArticulateThemesCopyData,\n  ProblemDetails,\n} from \"../api/articulate/types.gen\";\nimport { extractErrorMessage } from \"../utils/error-utils.ts\";\nimport { showUmbracoNotification } from \"../utils/notification-utils.ts\";\n\n@customElement(\"articulate-duplicate-theme\")\nexport default class ArticulateDuplicateThemeElement extends UmbLitElement {\n  @property({ type: String })\n  routerPath?: string;\n\n  @state() private _isLoading = false;\n  @state() private _themes: string[] = [];\n  private _newThemeName = \"\";\n  @state() private _selectedTheme: string | null = null;\n\n  async connectedCallback() {\n    super.connectedCallback();\n    await this.#loadThemes();\n  }\n\n  async #loadThemes() {\n    this._isLoading = true;\n    try {\n      const result = await Articulate.getUmbracoManagementApiV1ArticulateThemesAll({\n        throwOnError: true,\n      });\n\n      if (!result.response.ok) {\n        let errorToThrow: Error | ProblemDetails;\n        try {\n          const problemDetails: ProblemDetails = await result.response.json();\n          errorToThrow = problemDetails;\n        } catch {\n          errorToThrow = new Error(\n            `API Error: ${result.response.status} ${result.response.statusText}`,\n          );\n        }\n        throw errorToThrow;\n      }\n      const data = await result.data;\n      if (!data) {\n        throw new Error(\"Failed to load themes. Review back office logs for more details.\");\n      }\n\n      this._themes = data?.map((theme) => theme) ?? [];\n    } catch (error) {\n      this._themes = [];\n      const extractedMessage = extractErrorMessage(\n        error,\n        \"Could not load themes. Please check the logs for more details.\",\n      );\n      await showUmbracoNotification(this, extractedMessage, \"danger\");\n    } finally {\n      this._isLoading = false;\n      this.requestUpdate();\n    }\n  }\n\n  private _selectTheme(theme: string) {\n    this._selectedTheme = theme;\n    this._newThemeName = `${theme} - Copy`;\n    this.requestUpdate();\n  }\n\n  private _handleSelectThemeButtonClick(event: Event, themeName: string) {\n    event.stopPropagation();\n    this._selectTheme(themeName);\n  }\n\n  private _onCardSelected(event: Event) {\n    const card = event.target as HTMLElement;\n    const theme = card.getAttribute(\"data-theme\");\n    if (theme) {\n      this._selectTheme(theme);\n    }\n  }\n\n  private _onCardDeselected(event: Event) {\n    const card = event.target as HTMLElement;\n    const theme = card.getAttribute(\"data-theme\");\n    if (theme && theme === this._selectedTheme) {\n      this._selectedTheme = null;\n    }\n  }\n\n  #onNewThemeNameChange = (e: Event) => {\n    this._newThemeName = (e.target as HTMLInputElement).value;\n  };\n\n  #onCancelClick = () => {\n    this._selectedTheme = null;\n  };\n\n  private async _duplicateTheme() {\n    if (this._isLoading || !this._selectedTheme || !this._newThemeName) return;\n    const payload: PostUmbracoManagementApiV1ArticulateThemesCopyData = {\n      body: {\n        themeName: this._selectedTheme,\n        newThemeName: this._newThemeName,\n      },\n      url: \"/umbraco/management/api/v1/articulate/themes/copy\",\n    };\n    try {\n      this._isLoading = true;\n      const result = await Articulate.postUmbracoManagementApiV1ArticulateThemesCopy({\n        ...payload,\n        throwOnError: true,\n      });\n\n      if (!result.response.ok) {\n        let errorToThrow: Error | ProblemDetails;\n        try {\n          const problemDetails: ProblemDetails = await result.response.json();\n          errorToThrow = problemDetails;\n        } catch {\n          errorToThrow = new Error(\n            `API Error: ${result.response.status} ${result.response.statusText}`,\n          );\n        }\n        throw errorToThrow;\n      }\n\n      const newTheme = await result.data;\n\n      if (!newTheme) {\n        throw new Error(\"Failed to duplicate theme. Review back office logs for more details.\");\n      }\n\n      await showUmbracoNotification(\n        this,\n        `Theme '${this._selectedTheme}' duplicated to 'wwwroot/Views/Articulate/${newTheme}'`,\n        \"positive\",\n      );\n\n      this._selectedTheme = null;\n      this._newThemeName = \"\";\n      this.requestUpdate();\n    } catch (error: unknown) {\n      const extractedMessage = extractErrorMessage(\n        error,\n        \"Failed to duplicate theme. Review back office logs for more details.\",\n      );\n      await showUmbracoNotification(this, extractedMessage, \"danger\");\n    } finally {\n      this._isLoading = false;\n    }\n  }\n\n  private _renderThemeGrid() {\n    if (this._isLoading && !(this._themes?.length ?? 0)) {\n      return html`<uui-loader-bar animationDuration=\"1.5\" style=\"color: blue\"></uui-loader-bar>`;\n    }\n\n    if ((this._themes?.length ?? 0) > 0) {\n      return html`\n        <div class=\"theme-grid\">\n          ${(this._themes ?? []).map(\n            (theme: string) => html`\n              <uui-card-media\n                class=\"theme-card\"\n                .name=${theme}\n                ?selectable=${true}\n                ?selected=${this._selectedTheme === theme}\n                selectOnly\n                @selected=${this._onCardSelected}\n                @deselected=${this._onCardDeselected}\n                data-theme=${theme}\n              >\n                <img\n                  class=\"theme-preview-img\"\n                  src=\"/App_Plugins/Articulate/BackOffice/assets/theme-${theme.toLowerCase()}.png\"\n                  alt=\"${theme} theme preview\"\n                  loading=\"lazy\"\n                  @error=${(e: Event) => {\n                    const img = e.target as HTMLImageElement;\n                    img.style.display = \"none\";\n\n                    const parent = img.parentElement;\n                    if (!parent) return;\n\n                    if (!parent.querySelector(\":scope > .theme-fallback-initial\")) {\n                      const span = document.createElement(\"span\");\n                      span.className = \"theme-fallback-initial\";\n                      span.textContent = theme.charAt(0).toUpperCase();\n                      parent.appendChild(span);\n                    }\n                  }}\n                />\n                <div slot=\"actions\">\n                  <uui-button\n                    look=\"primary\"\n                    label=\"Select Theme ${theme}\"\n                    @click=${(e: Event) => this._handleSelectThemeButtonClick(e, theme)}\n                  >\n                    Select\n                  </uui-button>\n                </div>\n              </uui-card-media>\n            `,\n          )}\n        </div>\n      `;\n    }\n\n    return html`\n      <p\n        class=\"no-themes-message\"\n        style=\"text-align: center; margin-block: var(--uui-size-space-5);\"\n      >\n        No themes available.\n      </p>\n    `;\n  }\n\n  private _renderDuplicateForm() {\n    if (!this._selectedTheme) {\n      return html``;\n    }\n\n    const duplicateButtonLabel = this._isLoading ? \"Duplicating...\" : \"Duplicate\";\n\n    return html`\n      <div class=\"duplicate-form\">\n        <h3>Duplicate '${this._selectedTheme}' Theme</h3>\n        <p>Create a copy of this theme that you can customize.</p>\n\n        <uui-form-layout-item>\n          <uui-label for=\"newThemeName\" slot=\"label\" required>New theme name</uui-label>\n          <uui-input\n            id=\"newThemeName\"\n            .value=${this._newThemeName}\n            @input=${this.#onNewThemeNameChange}\n            required\n            ?disabled=${this._isLoading}\n          ></uui-input>\n        </uui-form-layout-item>\n\n        <div class=\"form-actions\">\n          <uui-button\n            look=\"primary\"\n            color=\"positive\"\n            label=\"Duplicate\"\n            type=\"button\"\n            @click=${this._duplicateTheme}\n            ?disabled=${!this._newThemeName || this._isLoading}\n            .state=${this._isLoading ? \"waiting\" : \"\"}\n          >\n            ${duplicateButtonLabel}\n          </uui-button>\n\n          <uui-button\n            look=\"secondary\"\n            label=\"Cancel\"\n            @click=${this.#onCancelClick}\n            ?disabled=${this._isLoading}\n          >\n            Cancel\n          </uui-button>\n        </div>\n      </div>\n    `;\n  }\n\n  override render() {\n    if (!this.routerPath) {\n      return html`<uui-loader></uui-loader>`;\n    }\n\n    return html`\n      <uui-box headline=\"Theme Customization\">\n        <div slot=\"header-actions\">\n          <uui-button\n            label=\"Back to Articulate dashboard options\"\n            look=\"outline\"\n            compact\n            .href=${this.routerPath || \"/umbraco/section/settings/dashboard/articulate\"}\n          >\n            ← Back\n          </uui-button>\n        </div>\n        <div class=\"container\">\n          <p>\n            You can duplicate any of Articulate's built-in themes to customize them yourself. The\n            duplicated theme will be copied to the ~/Views/Articulate folder where you can edit it.\n            Then you can select this theme from the themes drop down on your Articulate root node to\n            use it.\n          </p>\n        </div>\n        <div class=\"container\">${this._renderThemeGrid()} ${this._renderDuplicateForm()}</div>\n      </uui-box>\n    `;\n  }\n\n  static override readonly styles = [\n    UmbTextStyles,\n    css`\n      .theme-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n        gap: var(--uui-size-space-4);\n        margin: var(--uui-size-space-5) 0;\n        justify-content: center;\n      }\n      .theme-card {\n        cursor: pointer;\n        border: 1px solid var(--uui-color-border-emphasis);\n        width: 100%;\n        height: 170px;\n        box-sizing: border-box;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: space-between;\n        padding: var(--uui-size-space-2);\n      }\n      .theme-preview-img {\n        width: 100px;\n        height: 100px;\n        object-fit: contain;\n        background-color: var(--uui-color-surface-alt);\n        border-radius: var(--uui-border-radius);\n        box-sizing: border-box;\n        margin-bottom: var(--uui-size-space-2);\n      }\n      .theme-fallback-initial {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 100%;\n        height: 100%;\n        font-size: 3rem;\n        font-weight: bold;\n        color: var(--uui-color-text-alt);\n        background-color: var(--uui-color-surface-alt);\n        border-radius: var(--uui-border-radius);\n        box-sizing: border-box;\n      }\n      .duplicate-form {\n        background: var(--uui-color-surface);\n        padding: var(--uui-size-space-4);\n        border-radius: var(--uui-border-radius);\n        margin-top: var(--uui-size-space-4);\n      }\n      .form-actions {\n        display: flex;\n        gap: var(--uui-size-space-3);\n        margin-top: var(--uui-size-space-3);\n      }\n      .container {\n        padding-block-start: var(--uui-size-space-3);\n      }\n      @media (max-width: var(--uui-breakpoint-sm)) {\n        :host {\n          padding: var(--uui-size-space-3);\n        }\n        .theme-grid {\n          grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n        }\n      }\n      .no-themes-message {\n        color: var(--uui-color-text-alt);\n        text-align: center;\n        margin-block: var(--uui-size-layout-1);\n      }\n    `,\n  ];\n}\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"articulate-duplicate-theme\": ArticulateDuplicateThemeElement;\n  }\n}\n","import { css, customElement, html, state } from \"@umbraco-cms/backoffice/external/lit\";\nimport { UmbLitElement } from \"@umbraco-cms/backoffice/lit-element\";\nimport type { UmbRoute, UmbRouterSlotInitEvent } from \"@umbraco-cms/backoffice/router\";\n\nimport { UmbTextStyles } from \"@umbraco-cms/backoffice/style\";\nimport ArticulateBlogMlExporterElement from \"../components/articulate-blogml-exporter.element.js\";\nimport ArticulateBlogMlImporterElement from \"../components/articulate-blogml-importer.element.js\";\nimport ArticulateDashboardOptionsElement from \"../components/articulate-dashboard-options.element.js\";\nimport ArticulateDuplicateThemeElement from \"../components/articulate-duplicate-theme.element.js\";\n\n@customElement(\"articulate-dashboard-root\")\nexport default class ArticulateDashboardRootElement extends UmbLitElement {\n  @state() private _routerBasePath?: string;\n  @state() private _routes: UmbRoute[];\n\n  constructor() {\n    super();\n    this._routes = [\n      {\n        path: \"blogml/import\",\n        component: ArticulateBlogMlImporterElement,\n        setup: (el) => {\n          if (this._routerBasePath && el instanceof ArticulateBlogMlImporterElement)\n            el.routerPath = this._routerBasePath;\n        },\n      },\n      {\n        path: \"blogml/export\",\n        component: ArticulateBlogMlExporterElement,\n        setup: (el) => {\n          if (this._routerBasePath && el instanceof ArticulateBlogMlExporterElement)\n            el.routerPath = this._routerBasePath;\n        },\n      },\n      {\n        path: \"theme/collection\",\n        component: ArticulateDuplicateThemeElement,\n        setup: (el) => {\n          if (this._routerBasePath && el instanceof ArticulateDuplicateThemeElement)\n            el.routerPath = this._routerBasePath;\n        },\n      },\n      {\n        path: \"\",\n        component: ArticulateDashboardOptionsElement,\n        setup: (el) => {\n          if (this._routerBasePath && el instanceof ArticulateDashboardOptionsElement)\n            el.routerPath = this._routerBasePath;\n        },\n      },\n      {\n        path: \"**\",\n        component: async () =>\n          (await import(\"@umbraco-cms/backoffice/router\")).UmbRouteNotFoundElement,\n      },\n    ];\n  }\n\n  override render() {\n    return html`\n      <umb-body-layout>\n        <div slot=\"header\" class=\"header-container\">\n          <div class=\"articulate-header\">\n            <h3 class=\"header-title\">Articulate Management</h3>\n            <div class=\"header-logo\">ã</div>\n          </div>\n        </div>\n        <div class=\"dashboard-container\">\n          <umb-router-slot\n            .routes=${this._routes}\n            @init=${(event: UmbRouterSlotInitEvent) => {\n              this._routerBasePath = event.target.absoluteRouterPath;\n            }}\n          ></umb-router-slot>\n        </div>\n      </umb-body-layout>\n    `;\n  }\n\n  static override readonly styles = [\n    UmbTextStyles,\n    css`\n      :host {\n        display: block;\n        padding: var(--uui-size-space-5);\n      }\n\n      .header-container {\n        width: 100%;\n        padding: 0 var(--uui-size-space-3);\n      }\n\n      .articulate-header {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        width: 100%;\n        height: 69px;\n        background: var(--uui-color-surface);\n        border-radius: var(--uui-border-radius);\n        box-shadow: var(--uui-shadow-1);\n        box-sizing: border-box;\n        padding: 0 2rem;\n        margin: 0;\n        position: relative;\n      }\n      .header-title {\n        font-size: var(--uui-type-h3-size);\n        font-weight: 700;\n        letter-spacing: 0.01em;\n        color: var(--uui-color-text);\n        display: flex;\n        align-items: center;\n        height: 100%;\n      }\n      .header-logo {\n        font-weight: 900;\n        font-size: var(--uui-type-h1-size);\n        color: #c44;\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n        height: 100%;\n      }\n      @media (max-width: 768px) {\n        :host {\n          padding: var(--uui-size-space-3);\n        }\n        .articulate-header {\n          padding: 1rem 0.7rem;\n        }\n      }\n      .dashboard-container {\n        max-width: var(--uui-size-content-large);\n        margin: 0 auto;\n        padding: 0 var(--uui-size-space-3);\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"articulate-dashboard-root\": ArticulateDashboardRootElement;\n  }\n}\n","import ArticulateDashboardRootElement from \"./articulate-dashboard-root.element\";\n\nconst dashboardManifest: UmbExtensionManifest = {\n  type: \"dashboard\",\n  alias: \"Articulate.BackOffice.Dashboard\",\n  name: \"Articulate Dashboard\",\n  element: ArticulateDashboardRootElement,\n  weight: 100,\n  meta: {\n    label: \"Articulate\",\n    pathname: \"articulate\",\n  },\n  conditions: [\n    {\n      alias: \"Umb.Condition.SectionAlias\",\n      match: \"Umb.Section.Settings\",\n    },\n  ],\n};\n\nexport const manifest = dashboardManifest;\n","import { UMB_AUTH_CONTEXT } from \"@umbraco-cms/backoffice/auth\";\nimport type { UmbEntryPointOnInit } from \"@umbraco-cms/backoffice/extension-api\";\nimport { client } from \"../api/articulate/client.gen\";\nimport { manifest } from \"../dashboards/manifests\";\n\nexport const onInit: UmbEntryPointOnInit = (host, extensionRegistry) => {\n  extensionRegistry.register(manifest);\n  host.consumeContext(UMB_AUTH_CONTEXT, (authContext) => {\n    const config = authContext?.getOpenApiConfiguration();\n\n    client.setConfig({\n      auth: config?.token ?? undefined,\n      baseUrl: config?.base ?? \"\",\n      credentials: config?.credentials ?? \"same-origin\",\n    });\n  });\n};\n"],"names":["fetchArchiveDoctypeUdi","target","result","Articulate","errorToThrow","error","errorMessage","extractErrorMessage","showUmbracoNotification","fetchNodeNameByUdi","udi","openArchiveNodePicker","modalManager","archiveDoctypeUdi","modalContext","doc","_a","formStyles","css","ArticulateBlogMlExporterElement","UmbLitElement","UMB_MODAL_MANAGER_CONTEXT","instance","selectedNodeUnique","e","form","formData","submitButton","setFormMessage","embedImages","payload","responseData","successMessage","html","unsafeHTML","UmbTextStyles","__decorateClass","property","state","customElement","ArticulateBlogMlImporterElement","blogNodeUdi","importFileField","importFile","formDataUpload","initResult","initData","importPayload","importCallResult","importResponseData","dashboards","ArticulateDashboardOptionsElement","d","fullHref","t","o","s","n$2","r","n","S","c","i","h","a","l","p","u","f","b","y","_b","_ArticulateDuplicateThemeElement_instances","loadThemes_fn","_onNewThemeNameChange","_onCancelClick","ArticulateDuplicateThemeElement","__privateAdd","__privateMethod","theme","event","themeName","newTheme","extractedMessage","img","parent","span","duplicateButtonLabel","__privateGet","data","ArticulateDashboardRootElement","el","dashboardManifest","manifest","onInit","host","extensionRegistry","UMB_AUTH_CONTEXT","authContext","config","client"],"mappings":"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","x_google_ignoreList":[5,6,7,8,9]}