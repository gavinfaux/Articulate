{"version":3,"file":"property-editor-ui-markdown-editor.element-DHdDCQLk.js","sources":["../../../Client/src/packages/markdown-editor/components/input-markdown-editor/input-markdown.element.ts","../../../Client/src/packages/markdown-editor/property-editors/markdown-editor/property-editor-ui-markdown-editor.element.ts"],"sourcesContent":["import type {\n  UmbCodeEditorController,\n  UmbCodeEditorElement,\n} from \"@umbraco-cms/backoffice/code-editor\";\nimport { UmbCodeEditorLoadedEvent } from \"@umbraco-cms/backoffice/code-editor\";\nimport { UmbChangeEvent, type UmbInputEvent } from \"@umbraco-cms/backoffice/event\";\nimport { createExtensionApi } from \"@umbraco-cms/backoffice/extension-api\";\nimport { umbExtensionsRegistry } from \"@umbraco-cms/backoffice/extension-registry\";\nimport {\n  css,\n  customElement,\n  html,\n  nothing,\n  property,\n  query,\n  state,\n  unsafeHTML,\n  when,\n} from \"@umbraco-cms/backoffice/external/lit\";\nimport { marked } from \"@umbraco-cms/backoffice/external/marked\";\nimport { monaco } from \"@umbraco-cms/backoffice/external/monaco-editor\";\nimport type { UUIModalSidebarSize } from \"@umbraco-cms/backoffice/external/uui\";\nimport { UmbLitElement } from \"@umbraco-cms/backoffice/lit-element\";\nimport { UMB_MEDIA_PICKER_MODAL, UmbMediaUrlRepository } from \"@umbraco-cms/backoffice/media\";\nimport { UMB_MODAL_MANAGER_CONTEXT } from \"@umbraco-cms/backoffice/modal\";\nimport { UmbTextStyles } from \"@umbraco-cms/backoffice/style\";\nimport { sanitizeHTML } from \"@umbraco-cms/backoffice/utils\";\nimport { UmbFormControlMixin } from \"@umbraco-cms/backoffice/validation\";\n\ninterface UmbMarkdownEditorAction extends monaco.editor.IActionDescriptor {\n  id: string;\n  icon?: string;\n  keybindings?: number[];\n  label: string;\n  run(editor: monaco.editor.ICodeEditor, ...args: any[]): void | Promise<void>;\n}\n\n/**\n * @element umb-input-markdown\n * @fires change - when the value of the input changes\n */\n@customElement(\"articulate-input-markdown\")\nexport class ArticulateInputMarkdownElement extends UmbFormControlMixin<\n  string,\n  typeof UmbLitElement,\n  undefined\n>(UmbLitElement) {\n  protected override getFormElement() {\n    return this._codeEditor;\n  }\n\n  // TODO: Make actions be able to handle multiple selection\n\n  @property({ type: Boolean })\n  preview: boolean = false;\n\n  @property()\n  overlaySize?: UUIModalSidebarSize;\n\n  /**\n   * Sets the input to readonly mode, meaning value cannot be changed but still able to read and select its content.\n   * @type {boolean}\n   * @attr\n   * @default\n   */\n  @property({ type: Boolean, reflect: true })\n  public get readonly() {\n    return this.#readonly;\n  }\n  public set readonly(value) {\n    this.#readonly = value;\n    this.#editor?.monacoEditor?.updateOptions({ readOnly: this.#readonly });\n  }\n  #readonly = false;\n\n  #editor?: UmbCodeEditorController;\n\n  @query(\"umb-code-editor\")\n  private _codeEditor?: UmbCodeEditorElement;\n\n  @state()\n  private _actionExtensions: Array<UmbMarkdownEditorAction> = [];\n\n  #mediaUrlRepository = new UmbMediaUrlRepository(this);\n\n  #onCodeEditorLoaded(event: UmbCodeEditorLoadedEvent) {\n    if (event.type !== UmbCodeEditorLoadedEvent.TYPE) return;\n\n    try {\n      this.#editor = this._codeEditor?.editor;\n\n      // Set read only mode\n      this.#editor?.monacoEditor?.updateOptions({ readOnly: this.#readonly });\n\n      // TODO: make all action into extensions\n      this.observe(umbExtensionsRegistry.byType(\"monacoMarkdownEditorAction\"), (manifests) => {\n        manifests.forEach(async (manifest) => {\n          const api = await createExtensionApi(this, manifest, [this]);\n          const action: UmbMarkdownEditorAction = {\n            id: manifest.alias ?? api.getUnique(),\n            label: this.localize.string(manifest.meta?.label ?? api.getLabel()),\n            icon: manifest.meta?.icon ?? undefined,\n            keybindings: api.getKeybindings(),\n            run: async () =>\n              await api.execute({ editor: this.#editor, overlaySize: this.overlaySize }),\n          };\n          this.#editor?.monacoEditor?.addAction(action);\n          this._actionExtensions.push(action);\n          this.requestUpdate(\"_actionExtensions\");\n        });\n      });\n\n      this.#loadActions();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  #loadActions() {\n    //Note: UI Buttons have the keybindings hardcoded in its title. If you change the keybindings here, please update the render as well.\n    this.#editor?.monacoEditor?.addAction({\n      label: \"Add Heading H1\",\n      id: \"h1\",\n      keybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyMod.Shift | monaco.KeyCode.Digit1],\n      run: () => this._insertAtCurrentLine(\"# \"),\n    });\n    this.#editor?.monacoEditor?.addAction({\n      label: \"Add Heading H2\",\n      id: \"h2\",\n      keybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyMod.Shift | monaco.KeyCode.Digit2],\n      run: () => this._insertAtCurrentLine(\"## \"),\n    });\n    this.#editor?.monacoEditor?.addAction({\n      label: \"Add Heading H3\",\n      id: \"h3\",\n      keybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyMod.Shift | monaco.KeyCode.Digit3],\n      run: () => this._insertAtCurrentLine(\"### \"),\n    });\n    this.#editor?.monacoEditor?.addAction({\n      label: \"Add Heading H4\",\n      id: \"h4\",\n      keybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyMod.Shift | monaco.KeyCode.Digit4],\n      run: () => this._insertAtCurrentLine(\"#### \"),\n    });\n    this.#editor?.monacoEditor?.addAction({\n      label: \"Add Heading H5\",\n      id: \"h5\",\n      keybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyMod.Shift | monaco.KeyCode.Digit5],\n      run: () => this._insertAtCurrentLine(\"##### \"),\n    });\n    this.#editor?.monacoEditor?.addAction({\n      label: \"Add Heading H6\",\n      id: \"h6\",\n      keybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyMod.Shift | monaco.KeyCode.Digit6],\n      run: () => this._insertAtCurrentLine(\"###### \"),\n    });\n    this.#editor?.monacoEditor?.addAction({\n      label: \"Add Bold Text\",\n      id: \"b\",\n      keybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyB],\n      run: () => this._insertBetweenSelection(\"**\", \"**\", \"Your Bold Text\"),\n    });\n    this.#editor?.monacoEditor?.addAction({\n      label: \"Add Italic Text\",\n      id: \"i\",\n      keybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyI],\n      run: () => this._insertBetweenSelection(\"*\", \"*\", \"Your Italic Text\"),\n    });\n    this.#editor?.monacoEditor?.addAction({\n      label: \"Add Quote\",\n      id: \"q\",\n      keybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyMod.Shift | monaco.KeyCode.Period],\n      run: () => this._insertQuote(),\n    });\n    this.#editor?.monacoEditor?.addAction({\n      label: \"Add Ordered List\",\n      id: \"ol\",\n      keybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyMod.Shift | monaco.KeyCode.Digit7],\n      run: () => this._insertAtCurrentLine(\"1. \"),\n    });\n    this.#editor?.monacoEditor?.addAction({\n      label: \"Add Unordered List\",\n      id: \"ul\",\n      keybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyMod.Shift | monaco.KeyCode.Digit8],\n      run: () => this._insertAtCurrentLine(\"- \"),\n    });\n    this.#editor?.monacoEditor?.addAction({\n      label: \"Add Code\",\n      id: \"code\",\n      keybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyE],\n      run: () => this._insertBetweenSelection(\"`\", \"`\", \"Code\"),\n    });\n    this.#editor?.monacoEditor?.addAction({\n      label: \"Add Fenced Code\",\n      id: \"fenced-code\",\n      run: () => this._insertBetweenSelection(\"```\", \"```\", \"Code\"),\n    });\n    this.#editor?.monacoEditor?.addAction({\n      label: \"Add Horizontal Line\",\n      id: \"line\",\n      run: () => this._insertLine(),\n    });\n    this.#editor?.monacoEditor?.addAction({\n      label: \"Add Image\",\n      id: \"image\",\n      //keybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyJ], // What keybinding would be good for image?\n      run: () => this.#insertMedia(),\n      // TODO: Update when media picker is complete.\n    });\n  }\n\n  #onActionClick(event: Event, action: monaco.editor.IActionDescriptor) {\n    event.stopPropagation();\n    const hasAction = this.#editor?.monacoEditor?.getAction(action.id);\n    if (!hasAction) throw new Error(`Action ${action.id} not found in the editor.`);\n    this.#editor?.monacoEditor?.getAction(action.id)?.run();\n  }\n\n  private _focusEditor(): void {\n    // If we press one of the action buttons manually (which is outside the editor), we need to focus the editor again.\n    this.#editor?.monacoEditor?.focus();\n  }\n\n  async #insertMedia() {\n    const selection = this.#editor?.getSelections()[0];\n    if (!selection) return;\n\n    const alt = this.#editor?.getValueInRange(selection) || \"enter image description here\";\n\n    this._focusEditor(); // Focus before opening modal, otherwise cannot regain focus back after modal\n\n    const modalManager = await this.getContext(UMB_MODAL_MANAGER_CONTEXT);\n    const modalContext = modalManager.open(this, UMB_MEDIA_PICKER_MODAL);\n\n    modalContext\n      ?.onSubmit()\n      .then(async (value) => {\n        if (!value) return;\n\n        const uniques = value.selection.filter((unique) => unique !== null) as Array<string>;\n        const { data: mediaUrls } = await this.#mediaUrlRepository.requestItems(uniques);\n        const mediaUrl = mediaUrls?.length ? (mediaUrls[0]?.url ?? \"URL\") : \"URL\";\n\n        this.#editor?.monacoEditor?.executeEdits(\"\", [\n          {\n            range: selection,\n            text: `![${alt}](${mediaUrl})`,\n          },\n        ]);\n\n        this.#editor?.select({\n          startColumn: selection.startColumn + 2,\n          endColumn: selection.startColumn + alt.length + 2, // +2 because of ![\n          endLineNumber: selection.startLineNumber,\n          startLineNumber: selection.startLineNumber,\n        });\n      })\n      .catch(() => undefined)\n      .finally(() => this._focusEditor());\n  }\n\n  private _insertLine() {\n    const selection = this.#editor?.getSelections()[0];\n    if (!selection) return;\n\n    const endColumn = this.#editor?.monacoModel?.getLineMaxColumn(selection.endLineNumber) ?? 1;\n\n    if (endColumn === 1) {\n      this.#editor?.insertAtPosition(\"---\\n\", {\n        lineNumber: selection.endLineNumber,\n        column: 1,\n      });\n    } else {\n      this.#editor?.insertAtPosition(\"\\n\\n---\\n\", {\n        lineNumber: selection.endLineNumber,\n        column: endColumn,\n      });\n    }\n    this._focusEditor();\n  }\n\n  private _insertBetweenSelection(startValue: string, endValue: string, placeholder?: string) {\n    this._focusEditor();\n    const selection = this.#editor?.getSelections()[0];\n    if (!selection) return;\n\n    const selectedValue = this.#editor?.getValueInRange({\n      startLineNumber: selection.startLineNumber,\n      endLineNumber: selection.endLineNumber,\n      startColumn: selection.startColumn - startValue.length,\n      endColumn: selection.endColumn + endValue.length,\n    });\n\n    if (\n      selectedValue?.startsWith(startValue) &&\n      selectedValue.endsWith(endValue) &&\n      selectedValue.length > startValue.length + endValue.length\n    ) {\n      //Cancel previous insert\n      this.#editor?.select({\n        ...selection,\n        startColumn: selection.startColumn + startValue.length,\n      });\n      this.#editor?.monacoEditor?.executeEdits(\"\", [\n        {\n          range: {\n            startColumn: selection.startColumn - startValue.length,\n            startLineNumber: selection.startLineNumber,\n            endColumn: selection.startColumn,\n            endLineNumber: selection.startLineNumber,\n          },\n          text: \"\",\n        },\n        {\n          range: {\n            startColumn: selection.endColumn + startValue.length,\n            startLineNumber: selection.startLineNumber,\n            endColumn: selection.endColumn,\n            endLineNumber: selection.startLineNumber,\n          },\n          text: \"\",\n        },\n      ]);\n    } else {\n      // Insert\n      this.#editor?.insertAtPosition(startValue, {\n        lineNumber: selection.startLineNumber,\n        column: selection.startColumn,\n      });\n      this.#editor?.insertAtPosition(endValue, {\n        lineNumber: selection.endLineNumber,\n        column: selection.endColumn + startValue.length,\n      });\n\n      this.#editor?.select({\n        startLineNumber: selection.startLineNumber,\n        endLineNumber: selection.endLineNumber,\n        startColumn: selection.startColumn + startValue.length,\n        endColumn: selection.endColumn + startValue.length,\n      });\n    }\n\n    // if no text were selected when action fired\n    if (\n      selection.startColumn === selection.endColumn &&\n      selection.startLineNumber === selection.endLineNumber\n    ) {\n      if (placeholder) {\n        this.#editor?.insertAtPosition(placeholder, {\n          lineNumber: selection.startLineNumber,\n          column: selection.startColumn + startValue.length,\n        });\n      }\n\n      this.#editor?.select({\n        startLineNumber: selection.startLineNumber,\n        endLineNumber: selection.endLineNumber,\n        startColumn: selection.startColumn + startValue.length,\n        endColumn: selection.startColumn + startValue.length + (placeholder?.length ?? 0),\n      });\n    }\n  }\n\n  private _insertAtCurrentLine(value: string) {\n    this._focusEditor();\n    const selection = this.#editor?.getSelections()[0];\n    if (!selection) return;\n\n    const previousLineValue = this.#editor?.getValueInRange({\n      ...selection,\n      startLineNumber: selection.startLineNumber - 1,\n    });\n    const lineValue = this.#editor?.getValueInRange({ ...selection, startColumn: 1 });\n\n    // Regex: check if the line starts with a positive number followed by dot and a space\n    if (lineValue?.startsWith(value) || lineValue?.match(/^[1-9]\\d*\\.\\s.*/)) {\n      // Cancel previous insert\n      this.#editor?.monacoEditor?.executeEdits(\"\", [\n        {\n          range: {\n            startColumn: 1,\n            startLineNumber: selection.startLineNumber,\n            endColumn: 1 + value.length,\n            endLineNumber: selection.startLineNumber,\n          },\n          text: \"\",\n        },\n      ]);\n    } else if (value.match(/^[1-9]\\d*\\.\\s.*/) && previousLineValue?.match(/^[1-9]\\d*\\.\\s.*/)) {\n      // Check if the PREVIOUS line starts with a positive number followed by dot and a space. If yes, get that number.\n      const previousNumber = parseInt(previousLineValue, 10);\n      this.#editor?.insertAtPosition(`${previousNumber + 1}. `, {\n        lineNumber: selection.startLineNumber,\n        column: 1,\n      });\n    } else {\n      // Insert\n      this.#editor?.insertAtPosition(value, {\n        lineNumber: selection.startLineNumber,\n        column: 1,\n      });\n    }\n  }\n\n  private _insertQuote() {\n    const selection = this.#editor?.getSelections()[0];\n    if (!selection) return;\n\n    let index = selection.startLineNumber;\n    for (index; index <= selection.endLineNumber; index++) {\n      const line = this.#editor?.getValueInRange({\n        startLineNumber: index,\n        endLineNumber: index,\n        startColumn: 1,\n        endColumn: 3,\n      });\n      if (!line?.startsWith(\"> \")) {\n        this.#editor?.insertAtPosition(\"> \", {\n          lineNumber: index,\n          column: 1,\n        });\n      }\n    }\n    this._focusEditor();\n  }\n\n  #onKeyPress(e: KeyboardEvent) {\n    if (e.key !== \"Enter\") return;\n    //TODO: Tab does not seem to trigger keyboard events. We need to make some logic for ordered and unordered lists when tab is being used.\n\n    const selection = this.#editor?.getSelections()[0];\n    if (!selection) return;\n\n    const lineValue = this.#editor?.getValueInRange({ ...selection, startColumn: 1 }).trimStart();\n    if (!lineValue) return;\n\n    if (lineValue.startsWith(\"- \") && lineValue.length > 2) {\n      requestAnimationFrame(() => this.#editor?.insert(\"- \"));\n    } else if (lineValue.match(/^[1-9]\\d*\\.\\s.*/) && lineValue.length > 3) {\n      const previousNumber = parseInt(lineValue, 10);\n      requestAnimationFrame(() => this.#editor?.insert(`${previousNumber + 1}. `));\n    }\n  }\n\n  #onInput(e: UmbInputEvent) {\n    e.stopPropagation();\n    this.value = this.#editor?.value ?? \"\";\n    this.dispatchEvent(new UmbChangeEvent());\n  }\n\n  override render() {\n    return html`\n      ${this.#renderToolbar()}\n\n      <umb-code-editor\n        language=\"markdown\"\n        .code=${this.value as string}\n        disable-line-numbers\n        disable-minimap\n        disable-folding\n        @input=${this.#onInput}\n        @keypress=${this.#onKeyPress}\n        @loaded=${this.#onCodeEditorLoaded}\n      >\n      </umb-code-editor>\n\n      ${this.#renderPreview()}\n    `;\n  }\n\n  #renderToolbar() {\n    if (this.readonly) return nothing;\n    return html`\n      <div id=\"toolbar\">\n        <div id=\"buttons\">\n          <uui-button-group>\n            <uui-button\n              compact\n              look=\"default\"\n              label=\"Heading\"\n              title=\"Heading, &lt;Ctrl+Shift+1&gt;\"\n              @click=${() => this.#editor?.monacoEditor?.getAction(\"h1\")?.run()}\n            >\n              <umb-icon name=\"icon-heading-1\"></umb-icon>\n            </uui-button>\n            <uui-button\n              compact\n              look=\"default\"\n              label=\"Bold\"\n              title=\"Bold, &lt;Ctrl+B&gt;\"\n              @click=${() => this.#editor?.monacoEditor?.getAction(\"b\")?.run()}\n            >\n              <umb-icon name=\"icon-bold\"></umb-icon>\n            </uui-button>\n            <uui-button\n              compact\n              look=\"default\"\n              label=\"Italic\"\n              title=\"Italic, &lt;Ctrl+I&gt;\"\n              @click=${() => this.#editor?.monacoEditor?.getAction(\"i\")?.run()}\n            >\n              <umb-icon name=\"icon-italic\"></umb-icon>\n            </uui-button>\n          </uui-button-group>\n\n          <uui-button-group>\n            <uui-button\n              compact\n              look=\"default\"\n              label=\"Blockquote\"\n              title=\"Blockquote, &lt;Ctrl+Shift+.&gt;\"\n              @click=${() => this.#editor?.monacoEditor?.getAction(\"q\")?.run()}\n            >\n              <uui-icon name=\"icon-blockquote\"></uui-icon>\n            </uui-button>\n            <uui-button\n              compact\n              look=\"default\"\n              label=\"Ordered List\"\n              title=\"Ordered List, &lt;Ctrl+Shift+7&gt;\"\n              @click=${() => this.#editor?.monacoEditor?.getAction(\"ol\")?.run()}\n            >\n              <uui-icon name=\"icon-ordered-list\"></uui-icon>\n            </uui-button>\n            <uui-button\n              compact\n              look=\"default\"\n              label=\"Unordered List\"\n              title=\"Unordered List, &lt;Ctrl+Shift+8&gt;\"\n              @click=${() => this.#editor?.monacoEditor?.getAction(\"ul\")?.run()}\n            >\n              <uui-icon name=\"icon-bulleted-list\"></uui-icon>\n            </uui-button>\n          </uui-button-group>\n          <uui-button-group>\n            <uui-button\n              compact\n              look=\"default\"\n              label=\"Code\"\n              title=\"Code, &lt;Ctrl+E&gt;\"\n              @click=${() => this.#editor?.monacoEditor?.getAction(\"code\")?.run()}\n            >\n              <uui-icon name=\"icon-code\"></uui-icon>\n            </uui-button>\n            <uui-button\n              compact\n              look=\"default\"\n              label=\"Horizontal Rule\"\n              title=\"Horizontal Rule\"\n              @click=${() => this.#editor?.monacoEditor?.getAction(\"line\")?.run()}\n            >\n              <uui-icon name=\"icon-horizontal-rule\"></uui-icon>\n            </uui-button>\n            <uui-button\n              compact\n              look=\"default\"\n              label=\"Image\"\n              title=\"Image\"\n              @click=${() => this.#editor?.monacoEditor?.getAction(\"image\")?.run()}\n            >\n              <uui-icon name=\"icon-picture\"></uui-icon>\n            </uui-button>\n          </uui-button-group>\n\n          <uui-button-group>\n            ${this._actionExtensions.map(\n              (action) => html`\n                <uui-button\n                  compact\n                  look=\"default\"\n                  label=${this.localize.string(action.label)}\n                  title=${this.localize.string(action.label)}\n                  @click=${(event: Event) => this.#onActionClick(event, action)}\n                >\n                  ${when(\n                    action.icon,\n                    () => html`<uui-icon name=${action.icon!}></uui-icon>`,\n                    () => html`<span>${this.localize.string(action.label)}</span>`,\n                  )}\n                </uui-button>\n              `,\n            )}\n          </uui-button-group>\n        </div>\n        <div id=\"actions\">\n          <uui-button-group>\n            <uui-button\n              compact\n              label=\"Press F1 for all actions\"\n              title=\"Press F1 for all actions\"\n              @click=${() => {\n                this._focusEditor();\n                this.#editor?.monacoEditor?.trigger(\"\", \"editor.action.quickCommand\", \"\");\n              }}\n            >\n              <uui-key>F1</uui-key>\n            </uui-button>\n          </uui-button-group>\n        </div>\n      </div>\n    `;\n  }\n\n  #renderPreview() {\n    if (!this.preview || !this.value) return;\n    const markdownAsHtml = marked.parse(this.value as string) as string;\n    const sanitizedHtml = markdownAsHtml ? sanitizeHTML(markdownAsHtml) : \"\";\n    return html`<uui-scroll-container id=\"preview\"\n      >${unsafeHTML(sanitizedHtml)}</uui-scroll-container\n    >`;\n  }\n\n  static override styles = [\n    UmbTextStyles,\n    css`\n      :host {\n        display: flex;\n        flex-direction: column;\n      }\n\n      #toolbar {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n\n        border-radius: var(--uui-border-radius);\n        border: 1px solid var(--uui-color-border);\n        border-bottom: 0;\n        border-bottom-left-radius: 0;\n        border-bottom-right-radius: 0;\n        box-shadow:\n          0 2px 2px -2px rgba(34, 47, 62, 0.1),\n          0 8px 8px -4px rgba(34, 47, 62, 0.07);\n\n        background-color: var(--uui-color-surface-alt);\n        color: var(--color-text);\n\n        position: sticky;\n        top: -25px;\n        left: 0px;\n        right: 0px;\n        padding: var(--uui-size-3);\n        z-index: 9999999;\n\n        uui-key {\n          text-transform: uppercase;\n        }\n      }\n\n      #buttons {\n        flex: 1;\n        display: flex;\n        flex-wrap: wrap;\n        align-items: center;\n\n        uui-button-group:not(:last-child)::after {\n          content: \"\";\n          background-color: var(--uui-color-border);\n          width: 1px;\n          place-self: center;\n          height: 22px;\n          margin: 0 var(--uui-size-3);\n        }\n      }\n\n      umb-code-editor {\n        height: 200px;\n        border-radius: var(--uui-border-radius);\n        border: 1px solid var(--uui-color-border);\n        border-top: 0;\n        border-top-left-radius: 0;\n        border-top-right-radius: 0;\n        padding-top: var(--uui-size-3);\n      }\n\n      #preview {\n        max-height: 400px;\n      }\n\n      #preview blockquote {\n        border-left: 2px solid var(--uui-color-default-emphasis);\n        margin-inline: 0;\n        padding-inline: var(--uui-size-3);\n      }\n\n      #preview img {\n        max-width: 100%;\n      }\n\n      #preview hr {\n        border: none;\n        border-bottom: 1px solid var(--uui-palette-cocoa-black);\n      }\n\n      #preview p > code,\n      #preview pre {\n        border: 1px solid var(--uui-color-divider-emphasis);\n        border-radius: var(--uui-border-radius);\n        padding: 0 var(--uui-size-1);\n        background-color: var(--uui-color-background);\n      }\n    `,\n  ];\n}\nexport default ArticulateInputMarkdownElement;\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"articulate-input-markdown\": ArticulateInputMarkdownElement;\n  }\n}\n","import { customElement, html, property, state } from \"@umbraco-cms/backoffice/external/lit\";\nimport type { UUIModalSidebarSize } from \"@umbraco-cms/backoffice/external/uui\";\nimport { UmbLitElement } from \"@umbraco-cms/backoffice/lit-element\";\nimport type {\n  UmbPropertyEditorConfigCollection,\n  UmbPropertyEditorUiElement,\n} from \"@umbraco-cms/backoffice/property-editor\";\nimport type { ArticulateInputMarkdownElement } from \"../../components/input-markdown-editor/index.js\";\n\nimport { UmbChangeEvent } from \"@umbraco-cms/backoffice/event\";\nimport \"../../components/input-markdown-editor/index.js\";\n\n/**\n * @element umb-property-editor-ui-markdown-editor\n */\n@customElement(\"articulate-property-editor-ui-markdown-editor\")\nexport class ArticulatePropertyEditorUIMarkdownEditorElement\n  extends UmbLitElement\n  implements UmbPropertyEditorUiElement\n{\n  @property()\n  value?: string;\n\n  /**\n   * Sets the input to readonly mode, meaning value cannot be changed but still able to read and select its content.\n   * @type {boolean}\n   * @attr\n   * @default false\n   */\n  @property({ type: Boolean, reflect: true })\n  readonly = false;\n\n  @state()\n  private _preview?: boolean;\n\n  @state()\n  private _overlaySize: UUIModalSidebarSize = \"small\";\n\n  public set config(config: UmbPropertyEditorConfigCollection | undefined) {\n    if (!config) return;\n\n    this._preview = config.getValueByAlias(\"preview\");\n    this._overlaySize = config.getValueByAlias(\"overlaySize\") ?? \"small\";\n  }\n\n  #onChange(event: Event & { target: ArticulateInputMarkdownElement }) {\n    this.value = event.target.value as string;\n    this.dispatchEvent(new UmbChangeEvent());\n  }\n\n  override render() {\n    return html`\n      <umb-input-markdown\n        .value=${this.value}\n        .overlaySize=${this._overlaySize}\n        ?preview=${this._preview}\n        @change=${this.#onChange}\n        ?readonly=${this.readonly}\n      ></umb-input-markdown>\n    `;\n  }\n}\n\nexport { ArticulatePropertyEditorUIMarkdownEditorElement as element };\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"umb-property-editor-ui-markdown-editor\": ArticulatePropertyEditorUIMarkdownEditorElement;\n  }\n}\n"],"names":["_readonly","_editor","_mediaUrlRepository","_ArticulateInputMarkdownElement_instances","onCodeEditorLoaded_fn","loadActions_fn","onActionClick_fn","insertMedia_fn","onKeyPress_fn","onInput_fn","renderToolbar_fn","renderPreview_fn","ArticulateInputMarkdownElement","UmbFormControlMixin","UmbLitElement","__privateAdd","UmbMediaUrlRepository","__privateGet","value","__privateSet","_b","_a","selection","endColumn","_c","_d","_e","startValue","endValue","placeholder","selectedValue","_f","_g","_h","_i","_j","previousLineValue","lineValue","previousNumber","index","line","html","__privateMethod","event","UmbCodeEditorLoadedEvent","umbExtensionsRegistry","manifests","manifest","api","createExtensionApi","action","error","monaco","_l","_k","_n","_m","_p","_o","_r","_q","_t","_s","_v","_u","_x","_w","_z","_y","_B","_A","_D","_C","alt","modalContext","UMB_MODAL_MANAGER_CONTEXT","UMB_MEDIA_PICKER_MODAL","uniques","unique","mediaUrls","mediaUrl","e","UmbChangeEvent","nothing","when","markdownAsHtml","marked","sanitizedHtml","sanitizeHTML","unsafeHTML","UmbTextStyles","css","__decorateClass","property","query","state","customElement","_ArticulatePropertyEditorUIMarkdownEditorElement_instances","onChange_fn","ArticulatePropertyEditorUIMarkdownEditorElement","config"],"mappings":"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"}