// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { GetUmbracoManagementApiV1ArticulateBlogArchiveUdiData, GetUmbracoManagementApiV1ArticulateBlogArchiveUdiResponses, GetUmbracoManagementApiV1ArticulateBlogArchiveUdiErrors, GetUmbracoManagementApiV1ArticulateBlogDownloadData, GetUmbracoManagementApiV1ArticulateBlogDownloadResponses, GetUmbracoManagementApiV1ArticulateBlogDownloadErrors, PostUmbracoManagementApiV1ArticulateBlogExportData, PostUmbracoManagementApiV1ArticulateBlogExportResponses, PostUmbracoManagementApiV1ArticulateBlogExportErrors, GetUmbracoManagementApiV1ArticulateBlogExportDisqusData, GetUmbracoManagementApiV1ArticulateBlogExportDisqusResponses, GetUmbracoManagementApiV1ArticulateBlogExportDisqusErrors, PostUmbracoManagementApiV1ArticulateBlogImportData, PostUmbracoManagementApiV1ArticulateBlogImportResponses, PostUmbracoManagementApiV1ArticulateBlogImportErrors, PostUmbracoManagementApiV1ArticulateBlogImportBeginData, PostUmbracoManagementApiV1ArticulateBlogImportBeginResponses, PostUmbracoManagementApiV1ArticulateBlogImportBeginErrors, GetUmbracoManagementApiV1ArticulateEditorsThemesData, GetUmbracoManagementApiV1ArticulateEditorsThemesResponses, GetUmbracoManagementApiV1ArticulateEditorsThemesErrors, GetUmbracoManagementApiV1ArticulateThemesAllData, GetUmbracoManagementApiV1ArticulateThemesAllResponses, GetUmbracoManagementApiV1ArticulateThemesAllErrors, PostUmbracoManagementApiV1ArticulateThemesCopyData, PostUmbracoManagementApiV1ArticulateThemesCopyResponses, PostUmbracoManagementApiV1ArticulateThemesCopyErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export class Articulate {
    /**
     * Gets the UDI (Unique Document Identifier) for the Articulate Archive content type.
     * This endpoint is used to retrieve the UDI for the back office import and export features.
     */
    public static getUmbracoManagementApiV1ArticulateBlogArchiveUdi<ThrowOnError extends boolean = false>(options?: Options<GetUmbracoManagementApiV1ArticulateBlogArchiveUdiData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetUmbracoManagementApiV1ArticulateBlogArchiveUdiResponses, GetUmbracoManagementApiV1ArticulateBlogArchiveUdiErrors, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/management/api/v1/articulate/blog/archive/udi',
            ...options
        });
    }
    
    /**
     * Downloads the exported BlogML XML file.
     * The export endpoint must be called first to generate the file before downloading.
     */
    public static getUmbracoManagementApiV1ArticulateBlogDownload<ThrowOnError extends boolean = false>(options?: Options<GetUmbracoManagementApiV1ArticulateBlogDownloadData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetUmbracoManagementApiV1ArticulateBlogDownloadResponses, GetUmbracoManagementApiV1ArticulateBlogDownloadErrors, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/management/api/v1/articulate/blog/download',
            ...options
        });
    }
    
    /**
     * Exports blog data as a BlogML XML file.
     * This endpoint must be called to generate the export before downloading it using the download endpoint.
     */
    public static postUmbracoManagementApiV1ArticulateBlogExport<ThrowOnError extends boolean = false>(options: Options<PostUmbracoManagementApiV1ArticulateBlogExportData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<PostUmbracoManagementApiV1ArticulateBlogExportResponses, PostUmbracoManagementApiV1ArticulateBlogExportErrors, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/management/api/v1/articulate/blog/export',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Downloads the exported Disqus XML file.
     */
    public static getUmbracoManagementApiV1ArticulateBlogExportDisqus<ThrowOnError extends boolean = false>(options?: Options<GetUmbracoManagementApiV1ArticulateBlogExportDisqusData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetUmbracoManagementApiV1ArticulateBlogExportDisqusResponses, GetUmbracoManagementApiV1ArticulateBlogExportDisqusErrors, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/management/api/v1/articulate/blog/export/disqus',
            ...options
        });
    }
    
    /**
     * Imports blog data from a previously uploaded BlogML XML file.
     * This endpoint should be called after initializing the import with `import/begin`.
     */
    public static postUmbracoManagementApiV1ArticulateBlogImport<ThrowOnError extends boolean = false>(options: Options<PostUmbracoManagementApiV1ArticulateBlogImportData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<PostUmbracoManagementApiV1ArticulateBlogImportResponses, PostUmbracoManagementApiV1ArticulateBlogImportErrors, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/management/api/v1/articulate/blog/import',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Begins the BlogML import process by accepting an uploaded XML file, storing it temporarily, and returning a temporary file name along with the detected post count.
     * This endpoint must be called before performing a blog export using `import`.
     * ///
     * The request must be a form upload, and the first file must be an XML file.
     */
    public static postUmbracoManagementApiV1ArticulateBlogImportBegin<ThrowOnError extends boolean = false>(options?: Options<PostUmbracoManagementApiV1ArticulateBlogImportBeginData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<PostUmbracoManagementApiV1ArticulateBlogImportBeginResponses, PostUmbracoManagementApiV1ArticulateBlogImportBeginErrors, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/management/api/v1/articulate/blog/import/begin',
            ...options
        });
    }
    
    /**
     * Gets the list of available Articulate themes, consumed by Articulate Theme Picker property editor.
     * This endpoint returns the names of all available themes, including both default and user-defined themes.
     */
    public static getUmbracoManagementApiV1ArticulateEditorsThemes<ThrowOnError extends boolean = false>(options?: Options<GetUmbracoManagementApiV1ArticulateEditorsThemesData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetUmbracoManagementApiV1ArticulateEditorsThemesResponses, GetUmbracoManagementApiV1ArticulateEditorsThemesErrors, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/management/api/v1/articulate/editors/themes',
            ...options
        });
    }
    
    /**
     * Retrieves the list of available default Articulate themes.
     * This endpoint returns the names of default themes available for Articulate.
     */
    public static getUmbracoManagementApiV1ArticulateThemesAll<ThrowOnError extends boolean = false>(options?: Options<GetUmbracoManagementApiV1ArticulateThemesAllData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetUmbracoManagementApiV1ArticulateThemesAllResponses, GetUmbracoManagementApiV1ArticulateThemesAllErrors, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/management/api/v1/articulate/themes/all',
            ...options
        });
    }
    
    /**
     * Copies an existing theme to a new theme with a specified name.
     * This endpoint creates a copy of an existing theme under a new name. The new theme name must be unique.
     */
    public static postUmbracoManagementApiV1ArticulateThemesCopy<ThrowOnError extends boolean = false>(options: Options<PostUmbracoManagementApiV1ArticulateThemesCopyData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<PostUmbracoManagementApiV1ArticulateThemesCopyResponses, PostUmbracoManagementApiV1ArticulateThemesCopyErrors, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/management/api/v1/articulate/themes/copy',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
}